// Code generated by internal/scripts/gen_accessors; DO NOT EDIT.

package treezor

import (
	"encoding/json"
	"github.com/tifo/treezor-sdk/internal/types"
	"time"
)

// GetAccessSignature returns the AccessSignature field if it's non-nil, zero value otherwise.
func (a *Access) GetAccessSignature() string {
	if a != nil && a.AccessSignature != nil {
		return *a.AccessSignature
	}
	return ""
}

// GetAccessTag returns the AccessTag field if it's non-nil, zero value otherwise.
func (a *Access) GetAccessTag() string {
	if a != nil && a.AccessTag != nil {
		return *a.AccessTag
	}
	return ""
}

// GetAccessUserID returns the AccessUserID field if it's non-nil, zero value otherwise.
func (a *Access) GetAccessUserID() string {
	if a != nil && a.AccessUserID != nil {
		return *a.AccessUserID
	}
	return ""
}

// GetAccessUserIP returns the AccessUserIP field if it's non-nil, zero value otherwise.
func (a *Access) GetAccessUserIP() string {
	if a != nil && a.AccessUserIP != nil {
		return *a.AccessUserIP
	}
	return ""
}

// GetAuthorizations returns the Authorizations field if it's non-nil, zero value otherwise.
func (b *Balance) GetAuthorizations() float64 {
	if b != nil && b.Authorizations != nil {
		return b.Authorizations.Float64()
	}
	return 0.0
}

// GetAuthorizedBalance returns the AuthorizedBalance field if it's non-nil, zero value otherwise.
func (b *Balance) GetAuthorizedBalance() float64 {
	if b != nil && b.AuthorizedBalance != nil {
		return b.AuthorizedBalance.Float64()
	}
	return 0.0
}

// GetCalculationDate returns the CalculationDate field if it's non-nil, zero value otherwise.
func (b *Balance) GetCalculationDate() time.Time {
	if b != nil && b.CalculationDate != nil {
		return b.CalculationDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (b *Balance) GetCurrency() Currency {
	if b != nil && b.Currency != nil {
		return *b.Currency
	}
	return Currency("")
}

// GetCurrentBalance returns the CurrentBalance field if it's non-nil, zero value otherwise.
func (b *Balance) GetCurrentBalance() float64 {
	if b != nil && b.CurrentBalance != nil {
		return b.CurrentBalance.Float64()
	}
	return 0.0
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (b *Balance) GetWalletID() string {
	if b != nil && b.WalletID != nil {
		return b.WalletID.String()
	}
	return ""
}

// GetBalances returns the Balances field.
func (b *BalanceEvent) GetBalances() []*Balance {
	if b != nil {
		return b.Balances
	}
	return nil
}

// GetBalances returns the Balances field.
func (b *BalanceResponse) GetBalances() []*Balance {
	if b != nil {
		return b.Balances
	}
	return nil
}

// GetBankAccountBIC returns the BankAccountBIC field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountBIC() string {
	if b != nil && b.BankAccountBIC != nil {
		return *b.BankAccountBIC
	}
	return ""
}

// GetBankAccountIBAN returns the BankAccountIBAN field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountIBAN() string {
	if b != nil && b.BankAccountIBAN != nil {
		return *b.BankAccountIBAN
	}
	return ""
}

// GetBankAccountID returns the BankAccountID field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountID() string {
	if b != nil && b.BankAccountID != nil {
		return b.BankAccountID.String()
	}
	return ""
}

// GetBankAccountOwnerAddress returns the BankAccountOwnerAddress field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountOwnerAddress() string {
	if b != nil && b.BankAccountOwnerAddress != nil {
		return *b.BankAccountOwnerAddress
	}
	return ""
}

// GetBankAccountOwnerName returns the BankAccountOwnerName field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountOwnerName() string {
	if b != nil && b.BankAccountOwnerName != nil {
		return *b.BankAccountOwnerName
	}
	return ""
}

// GetBankAccountStatus returns the BankAccountStatus field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountStatus() string {
	if b != nil && b.BankAccountStatus != nil {
		return *b.BankAccountStatus
	}
	return ""
}

// GetBankAccountTag returns the BankAccountTag field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountTag() string {
	if b != nil && b.BankAccountTag != nil {
		return *b.BankAccountTag
	}
	return ""
}

// GetBankAccountType returns the BankAccountType field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetBankAccountType() string {
	if b != nil && b.BankAccountType != nil {
		return *b.BankAccountType
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetCodeStatus() string {
	if b != nil && b.CodeStatus != nil {
		return b.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetCreatedDate() time.Time {
	if b != nil && b.CreatedDate != nil {
		return b.CreatedDate.Time
	}
	return time.Time{}
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetInformationStatus() string {
	if b != nil && b.InformationStatus != nil {
		return *b.InformationStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetModifiedDate() time.Time {
	if b != nil && b.ModifiedDate != nil {
		return b.ModifiedDate.Time
	}
	return time.Time{}
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetName() string {
	if b != nil && b.Name != nil {
		return *b.Name
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetTotalRows() int64 {
	if b != nil && b.TotalRows != nil {
		return b.TotalRows.Int64()
	}
	return 0
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (b *BankAccount) GetUserID() string {
	if b != nil && b.UserID != nil {
		return b.UserID.String()
	}
	return ""
}

// GetBankAccounts returns the BankAccounts field.
func (b *BankAccountEvent) GetBankAccounts() []*BankAccount {
	if b != nil {
		return b.BankAccounts
	}
	return nil
}

// GetAddress returns the Address field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetAddress() string {
	if b != nil && b.Address != nil {
		return *b.Address
	}
	return ""
}

// GetBeneficiaryID returns the BeneficiaryID field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetBeneficiaryID() string {
	if b != nil && b.BeneficiaryID != nil {
		return b.BeneficiaryID.String()
	}
	return ""
}

// GetBIC returns the BIC field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetBIC() string {
	if b != nil && b.BIC != nil {
		return *b.BIC
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetCreatedDate() time.Time {
	if b != nil && b.CreatedDate != nil {
		return b.CreatedDate.Time
	}
	return time.Time{}
}

// GetIBAN returns the IBAN field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetIBAN() string {
	if b != nil && b.IBAN != nil {
		return *b.IBAN
	}
	return ""
}

// GetIsActive returns the IsActive field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetIsActive() bool {
	if b != nil && b.IsActive != nil {
		return b.IsActive.Bool()
	}
	return false
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetModifiedDate() time.Time {
	if b != nil && b.ModifiedDate != nil {
		return b.ModifiedDate.Time
	}
	return time.Time{}
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetName() string {
	if b != nil && b.Name != nil {
		return *b.Name
	}
	return ""
}

// GetNickName returns the NickName field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetNickName() string {
	if b != nil && b.NickName != nil {
		return *b.NickName
	}
	return ""
}

// GetSDDB2BWhitelist returns the SDDB2BWhitelist field.
func (b *Beneficiary) GetSDDB2BWhitelist() []*SDDB2BWhitelist {
	if b != nil {
		return b.SDDB2BWhitelist
	}
	return nil
}

// GetSDDCoreBlacklist returns the SDDCoreBlacklist field.
func (b *Beneficiary) GetSDDCoreBlacklist() []string {
	if b != nil {
		return b.SDDCoreBlacklist
	}
	return nil
}

// GetSDDCoreKnownUniqueMandateReference returns the SDDCoreKnownUniqueMandateReference field.
func (b *Beneficiary) GetSDDCoreKnownUniqueMandateReference() []string {
	if b != nil {
		return b.SDDCoreKnownUniqueMandateReference
	}
	return nil
}

// GetSepaCreditorIdentifier returns the SepaCreditorIdentifier field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetSepaCreditorIdentifier() string {
	if b != nil && b.SepaCreditorIdentifier != nil {
		return *b.SepaCreditorIdentifier
	}
	return ""
}

// GetTag returns the Tag field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetTag() string {
	if b != nil && b.Tag != nil {
		return *b.Tag
	}
	return ""
}

// GetUsableForSCT returns the UsableForSCT field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetUsableForSCT() bool {
	if b != nil && b.UsableForSCT != nil {
		return b.UsableForSCT.Bool()
	}
	return false
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (b *Beneficiary) GetUserID() string {
	if b != nil && b.UserID != nil {
		return b.UserID.String()
	}
	return ""
}

// GetBeneficiaries returns the Beneficiaries field.
func (b *BeneficiaryEvent) GetBeneficiaries() []*Beneficiary {
	if b != nil {
		return b.Beneficiaries
	}
	return nil
}

// GetAddress returns the Address field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetAddress() string {
	if b != nil && b.Address != nil {
		return *b.Address
	}
	return ""
}

// GetBeneficiaryID returns the BeneficiaryID field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetBeneficiaryID() string {
	if b != nil && b.BeneficiaryID != nil {
		return *b.BeneficiaryID
	}
	return ""
}

// GetBIC returns the BIC field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetBIC() string {
	if b != nil && b.BIC != nil {
		return *b.BIC
	}
	return ""
}

// GetIBAN returns the IBAN field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetIBAN() string {
	if b != nil && b.IBAN != nil {
		return *b.IBAN
	}
	return ""
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetName() string {
	if b != nil && b.Name != nil {
		return *b.Name
	}
	return ""
}

// GetNickName returns the NickName field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetNickName() string {
	if b != nil && b.NickName != nil {
		return *b.NickName
	}
	return ""
}

// GetSDDB2BWhitelist returns the SDDB2BWhitelist field.
func (b *BeneficiaryRequest) GetSDDB2BWhitelist() []*SDDB2BWhitelist {
	if b != nil {
		return b.SDDB2BWhitelist
	}
	return nil
}

// GetSDDCoreBlacklist returns the SDDCoreBlacklist field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetSDDCoreBlacklist() []string {
	if b != nil && b.SDDCoreBlacklist != nil {
		return *b.SDDCoreBlacklist
	}
	return nil
}

// GetSDDCoreKnownUniqueMandateReference returns the SDDCoreKnownUniqueMandateReference field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetSDDCoreKnownUniqueMandateReference() []string {
	if b != nil && b.SDDCoreKnownUniqueMandateReference != nil {
		return *b.SDDCoreKnownUniqueMandateReference
	}
	return nil
}

// GetSEPACreditorIdentifier returns the SEPACreditorIdentifier field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetSEPACreditorIdentifier() string {
	if b != nil && b.SEPACreditorIdentifier != nil {
		return *b.SEPACreditorIdentifier
	}
	return ""
}

// GetTag returns the Tag field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetTag() string {
	if b != nil && b.Tag != nil {
		return *b.Tag
	}
	return ""
}

// GetUsableForSCT returns the UsableForSCT field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetUsableForSCT() bool {
	if b != nil && b.UsableForSCT != nil {
		return *b.UsableForSCT
	}
	return false
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (b *BeneficiaryRequest) GetUserID() string {
	if b != nil && b.UserID != nil {
		return *b.UserID
	}
	return ""
}

// GetBeneficiaries returns the Beneficiaries field.
func (b *BeneficiaryResponse) GetBeneficiaries() []*Beneficiary {
	if b != nil {
		return b.Beneficiaries
	}
	return nil
}

// GetCancellationNumber returns the CancellationNumber field if it's non-nil, zero value otherwise.
func (c *Card) GetCancellationNumber() int64 {
	if c != nil && c.CancellationNumber != nil {
		return c.CancellationNumber.Int64()
	}
	return 0
}

// GetCardDesign returns the CardDesign field if it's non-nil, zero value otherwise.
func (c *Card) GetCardDesign() string {
	if c != nil && c.CardDesign != nil {
		return *c.CardDesign
	}
	return ""
}

// GetCardID returns the CardID field if it's non-nil, zero value otherwise.
func (c *Card) GetCardID() string {
	if c != nil && c.CardID != nil {
		return c.CardID.String()
	}
	return ""
}

// GetCardTag returns the CardTag field if it's non-nil, zero value otherwise.
func (c *Card) GetCardTag() string {
	if c != nil && c.CardTag != nil {
		return *c.CardTag
	}
	return ""
}

// GetCountryCode returns the CountryCode field if it's non-nil, zero value otherwise.
func (c *Card) GetCountryCode() string {
	if c != nil && c.CountryCode != nil {
		return *c.CountryCode
	}
	return ""
}

// GetCountryRestrictionGroupID returns the CountryRestrictionGroupID field if it's non-nil, zero value otherwise.
func (c *Card) GetCountryRestrictionGroupID() string {
	if c != nil && c.CountryRestrictionGroupID != nil {
		return c.CountryRestrictionGroupID.String()
	}
	return ""
}

// GetCreatedBy returns the CreatedBy field if it's non-nil, zero value otherwise.
func (c *Card) GetCreatedBy() string {
	if c != nil && c.CreatedBy != nil {
		return c.CreatedBy.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (c *Card) GetCreatedDate() time.Time {
	if c != nil && c.CreatedDate != nil {
		return c.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrencyCode returns the CurrencyCode field if it's non-nil, zero value otherwise.
func (c *Card) GetCurrencyCode() Currency {
	if c != nil && c.CurrencyCode != nil {
		return *c.CurrencyCode
	}
	return Currency("")
}

// GetCVV returns the CVV field if it's non-nil, zero value otherwise.
func (c *Card) GetCVV() string {
	if c != nil && c.CVV != nil {
		return *c.CVV
	}
	return ""
}

// GetDeliveryAddress1 returns the DeliveryAddress1 field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryAddress1() string {
	if c != nil && c.DeliveryAddress1 != nil {
		return *c.DeliveryAddress1
	}
	return ""
}

// GetDeliveryAddress2 returns the DeliveryAddress2 field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryAddress2() string {
	if c != nil && c.DeliveryAddress2 != nil {
		return *c.DeliveryAddress2
	}
	return ""
}

// GetDeliveryAddress3 returns the DeliveryAddress3 field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryAddress3() string {
	if c != nil && c.DeliveryAddress3 != nil {
		return *c.DeliveryAddress3
	}
	return ""
}

// GetDeliveryCity returns the DeliveryCity field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryCity() string {
	if c != nil && c.DeliveryCity != nil {
		return *c.DeliveryCity
	}
	return ""
}

// GetDeliveryCountry returns the DeliveryCountry field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryCountry() string {
	if c != nil && c.DeliveryCountry != nil {
		return *c.DeliveryCountry
	}
	return ""
}

// GetDeliveryFirstname returns the DeliveryFirstname field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryFirstname() string {
	if c != nil && c.DeliveryFirstname != nil {
		return *c.DeliveryFirstname
	}
	return ""
}

// GetDeliveryLastname returns the DeliveryLastname field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryLastname() string {
	if c != nil && c.DeliveryLastname != nil {
		return *c.DeliveryLastname
	}
	return ""
}

// GetDeliveryPostcode returns the DeliveryPostcode field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryPostcode() string {
	if c != nil && c.DeliveryPostcode != nil {
		return *c.DeliveryPostcode
	}
	return ""
}

// GetDeliveryTitle returns the DeliveryTitle field if it's non-nil, zero value otherwise.
func (c *Card) GetDeliveryTitle() string {
	if c != nil && c.DeliveryTitle != nil {
		return *c.DeliveryTitle
	}
	return ""
}

// GetEmbossedName returns the EmbossedName field if it's non-nil, zero value otherwise.
func (c *Card) GetEmbossedName() string {
	if c != nil && c.EmbossedName != nil {
		return *c.EmbossedName
	}
	return ""
}

// GetEndDate returns the EndDate field if it's non-nil, zero value otherwise.
func (c *Card) GetEndDate() time.Time {
	if c != nil && c.EndDate != nil {
		return c.EndDate.Time
	}
	return time.Time{}
}

// GetEventAlias returns the EventAlias field if it's non-nil, zero value otherwise.
func (c *Card) GetEventAlias() string {
	if c != nil && c.EventAlias != nil {
		return *c.EventAlias
	}
	return ""
}

// GetEventName returns the EventName field if it's non-nil, zero value otherwise.
func (c *Card) GetEventName() string {
	if c != nil && c.EventName != nil {
		return *c.EventName
	}
	return ""
}

// GetExpiryDate returns the ExpiryDate field if it's non-nil, zero value otherwise.
func (c *Card) GetExpiryDate() time.Time {
	if c != nil && c.ExpiryDate != nil {
		return c.ExpiryDate.Time
	}
	return time.Time{}
}

// GetIsLive returns the IsLive field if it's non-nil, zero value otherwise.
func (c *Card) GetIsLive() bool {
	if c != nil && c.IsLive != nil {
		return c.IsLive.Bool()
	}
	return false
}

// GetLang returns the Lang field if it's non-nil, zero value otherwise.
func (c *Card) GetLang() string {
	if c != nil && c.Lang != nil {
		return *c.Lang
	}
	return ""
}

// GetLimitATMAll returns the LimitATMAll field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitATMAll() int64 {
	if c != nil && c.LimitATMAll != nil {
		return c.LimitATMAll.Int64()
	}
	return 0
}

// GetLimitATMDay returns the LimitATMDay field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitATMDay() int64 {
	if c != nil && c.LimitATMDay != nil {
		return c.LimitATMDay.Int64()
	}
	return 0
}

// GetLimitATMMonth returns the LimitATMMonth field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitATMMonth() int64 {
	if c != nil && c.LimitATMMonth != nil {
		return c.LimitATMMonth.Int64()
	}
	return 0
}

// GetLimitATMWeek returns the LimitATMWeek field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitATMWeek() int64 {
	if c != nil && c.LimitATMWeek != nil {
		return c.LimitATMWeek.Int64()
	}
	return 0
}

// GetLimitATMYear returns the LimitATMYear field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitATMYear() int64 {
	if c != nil && c.LimitATMYear != nil {
		return c.LimitATMYear.Int64()
	}
	return 0
}

// GetLimitPaymentAll returns the LimitPaymentAll field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitPaymentAll() int64 {
	if c != nil && c.LimitPaymentAll != nil {
		return c.LimitPaymentAll.Int64()
	}
	return 0
}

// GetLimitPaymentDay returns the LimitPaymentDay field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitPaymentDay() int64 {
	if c != nil && c.LimitPaymentDay != nil {
		return c.LimitPaymentDay.Int64()
	}
	return 0
}

// GetLimitPaymentMonth returns the LimitPaymentMonth field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitPaymentMonth() int64 {
	if c != nil && c.LimitPaymentMonth != nil {
		return c.LimitPaymentMonth.Int64()
	}
	return 0
}

// GetLimitPaymentWeek returns the LimitPaymentWeek field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitPaymentWeek() int64 {
	if c != nil && c.LimitPaymentWeek != nil {
		return c.LimitPaymentWeek.Int64()
	}
	return 0
}

// GetLimitPaymentYear returns the LimitPaymentYear field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitPaymentYear() int64 {
	if c != nil && c.LimitPaymentYear != nil {
		return c.LimitPaymentYear.Int64()
	}
	return 0
}

// GetLimitsGroup returns the LimitsGroup field if it's non-nil, zero value otherwise.
func (c *Card) GetLimitsGroup() string {
	if c != nil && c.LimitsGroup != nil {
		return *c.LimitsGroup
	}
	return ""
}

// GetMaskedPan returns the MaskedPan field if it's non-nil, zero value otherwise.
func (c *Card) GetMaskedPan() string {
	if c != nil && c.MaskedPan != nil {
		return *c.MaskedPan
	}
	return ""
}

// GetMccRestrictionGroupID returns the MccRestrictionGroupID field if it's non-nil, zero value otherwise.
func (c *Card) GetMccRestrictionGroupID() string {
	if c != nil && c.MccRestrictionGroupID != nil {
		return c.MccRestrictionGroupID.String()
	}
	return ""
}

// GetMerchantRestrictionGroupID returns the MerchantRestrictionGroupID field if it's non-nil, zero value otherwise.
func (c *Card) GetMerchantRestrictionGroupID() string {
	if c != nil && c.MerchantRestrictionGroupID != nil {
		return c.MerchantRestrictionGroupID.String()
	}
	return ""
}

// GetMobileSent returns the MobileSent field if it's non-nil, zero value otherwise.
func (c *Card) GetMobileSent() string {
	if c != nil && c.MobileSent != nil {
		return *c.MobileSent
	}
	return ""
}

// GetModifiedBy returns the ModifiedBy field if it's non-nil, zero value otherwise.
func (c *Card) GetModifiedBy() string {
	if c != nil && c.ModifiedBy != nil {
		return c.ModifiedBy.String()
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (c *Card) GetModifiedDate() time.Time {
	if c != nil && c.ModifiedDate != nil {
		return c.ModifiedDate.Time
	}
	return time.Time{}
}

// GetOptionATM returns the OptionATM field if it's non-nil, zero value otherwise.
func (c *Card) GetOptionATM() bool {
	if c != nil && c.OptionATM != nil {
		return c.OptionATM.Bool()
	}
	return false
}

// GetOptionForeign returns the OptionForeign field if it's non-nil, zero value otherwise.
func (c *Card) GetOptionForeign() bool {
	if c != nil && c.OptionForeign != nil {
		return c.OptionForeign.Bool()
	}
	return false
}

// GetOptionNFC returns the OptionNFC field if it's non-nil, zero value otherwise.
func (c *Card) GetOptionNFC() bool {
	if c != nil && c.OptionNFC != nil {
		return c.OptionNFC.Bool()
	}
	return false
}

// GetOptionOnline returns the OptionOnline field if it's non-nil, zero value otherwise.
func (c *Card) GetOptionOnline() bool {
	if c != nil && c.OptionOnline != nil {
		return c.OptionOnline.Bool()
	}
	return false
}

// GetPaymentDailyLimit returns the PaymentDailyLimit field if it's non-nil, zero value otherwise.
func (c *Card) GetPaymentDailyLimit() float64 {
	if c != nil && c.PaymentDailyLimit != nil {
		return c.PaymentDailyLimit.Float64()
	}
	return 0.0
}

// GetPermsGroup returns the PermsGroup field if it's non-nil, zero value otherwise.
func (c *Card) GetPermsGroup() string {
	if c != nil && c.PermsGroup != nil {
		return *c.PermsGroup
	}
	return ""
}

// GetPhysical returns the Physical field if it's non-nil, zero value otherwise.
func (c *Card) GetPhysical() bool {
	if c != nil && c.Physical != nil {
		return c.Physical.Bool()
	}
	return false
}

// GetPINTryExceeds returns the PINTryExceeds field if it's non-nil, zero value otherwise.
func (c *Card) GetPINTryExceeds() bool {
	if c != nil && c.PINTryExceeds != nil {
		return c.PINTryExceeds.Bool()
	}
	return false
}

// GetPublicToken returns the PublicToken field if it's non-nil, zero value otherwise.
func (c *Card) GetPublicToken() string {
	if c != nil && c.PublicToken != nil {
		return *c.PublicToken
	}
	return ""
}

// GetRestrictionGroupLimits returns the RestrictionGroupLimits field.
func (c *Card) GetRestrictionGroupLimits() []*CardRestrictionGroupLimits {
	if c != nil {
		return c.RestrictionGroupLimits
	}
	return nil
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (c *Card) GetStartDate() time.Time {
	if c != nil && c.StartDate != nil {
		return c.StartDate.Time
	}
	return time.Time{}
}

// GetStatusCode returns the StatusCode field if it's non-nil, zero value otherwise.
func (c *Card) GetStatusCode() string {
	if c != nil && c.StatusCode != nil {
		return *c.StatusCode
	}
	return ""
}

// GetTotalATMAll returns the TotalATMAll field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalATMAll() float64 {
	if c != nil && c.TotalATMAll != nil {
		return c.TotalATMAll.Float64()
	}
	return 0.0
}

// GetTotalATMDay returns the TotalATMDay field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalATMDay() float64 {
	if c != nil && c.TotalATMDay != nil {
		return c.TotalATMDay.Float64()
	}
	return 0.0
}

// GetTotalATMMonth returns the TotalATMMonth field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalATMMonth() float64 {
	if c != nil && c.TotalATMMonth != nil {
		return c.TotalATMMonth.Float64()
	}
	return 0.0
}

// GetTotalATMWeek returns the TotalATMWeek field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalATMWeek() float64 {
	if c != nil && c.TotalATMWeek != nil {
		return c.TotalATMWeek.Float64()
	}
	return 0.0
}

// GetTotalATMYear returns the TotalATMYear field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalATMYear() float64 {
	if c != nil && c.TotalATMYear != nil {
		return c.TotalATMYear.Float64()
	}
	return 0.0
}

// GetTotalPaymentAll returns the TotalPaymentAll field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalPaymentAll() float64 {
	if c != nil && c.TotalPaymentAll != nil {
		return c.TotalPaymentAll.Float64()
	}
	return 0.0
}

// GetTotalPaymentDay returns the TotalPaymentDay field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalPaymentDay() float64 {
	if c != nil && c.TotalPaymentDay != nil {
		return c.TotalPaymentDay.Float64()
	}
	return 0.0
}

// GetTotalPaymentMonth returns the TotalPaymentMonth field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalPaymentMonth() float64 {
	if c != nil && c.TotalPaymentMonth != nil {
		return c.TotalPaymentMonth.Float64()
	}
	return 0.0
}

// GetTotalPaymentWeek returns the TotalPaymentWeek field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalPaymentWeek() float64 {
	if c != nil && c.TotalPaymentWeek != nil {
		return c.TotalPaymentWeek.Float64()
	}
	return 0.0
}

// GetTotalPaymentYear returns the TotalPaymentYear field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalPaymentYear() float64 {
	if c != nil && c.TotalPaymentYear != nil {
		return c.TotalPaymentYear.Float64()
	}
	return 0.0
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (c *Card) GetTotalRows() int64 {
	if c != nil && c.TotalRows != nil {
		return c.TotalRows.Int64()
	}
	return 0
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (c *Card) GetUserID() string {
	if c != nil && c.UserID != nil {
		return c.UserID.String()
	}
	return ""
}

// GetVirtualConverted returns the VirtualConverted field if it's non-nil, zero value otherwise.
func (c *Card) GetVirtualConverted() bool {
	if c != nil && c.VirtualConverted != nil {
		return c.VirtualConverted.Bool()
	}
	return false
}

// GetWalletCardtransactionID returns the WalletCardtransactionID field if it's non-nil, zero value otherwise.
func (c *Card) GetWalletCardtransactionID() string {
	if c != nil && c.WalletCardtransactionID != nil {
		return c.WalletCardtransactionID.String()
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (c *Card) GetWalletID() string {
	if c != nil && c.WalletID != nil {
		return c.WalletID.String()
	}
	return ""
}

// GetCardID returns the CardID field if it's non-nil, zero value otherwise.
func (c *Card3DS) GetCardID() string {
	if c != nil && c.CardID != nil {
		return *c.CardID
	}
	return ""
}

// GetChargebacks returns the Chargebacks field.
func (c *CardChargebackEvent) GetChargebacks() []*Chargeback {
	if c != nil {
		return c.Chargebacks
	}
	return nil
}

// GetActivationCode returns the ActivationCode field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetActivationCode() string {
	if c != nil && c.ActivationCode != nil {
		return *c.ActivationCode
	}
	return ""
}

// GetActivationCodeExpiry returns the ActivationCodeExpiry field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetActivationCodeExpiry() time.Time {
	if c != nil && c.ActivationCodeExpiry != nil {
		return *c.ActivationCodeExpiry
	}
	return time.Time{}
}

// GetActivationMethod returns the ActivationMethod field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetActivationMethod() string {
	if c != nil && c.ActivationMethod != nil {
		return *c.ActivationMethod
	}
	return ""
}

// GetCardDigitalizationExternalID returns the CardDigitalizationExternalID field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetCardDigitalizationExternalID() string {
	if c != nil && c.CardDigitalizationExternalID != nil {
		return *c.CardDigitalizationExternalID
	}
	return ""
}

// GetCardID returns the CardID field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetCardID() string {
	if c != nil && c.CardID != nil {
		return c.CardID.String()
	}
	return ""
}

// GetDeviceName returns the DeviceName field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetDeviceName() string {
	if c != nil && c.DeviceName != nil {
		return *c.DeviceName
	}
	return ""
}

// GetDeviceType returns the DeviceType field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetDeviceType() string {
	if c != nil && c.DeviceType != nil {
		return *c.DeviceType
	}
	return ""
}

// GetExpirationDate returns the ExpirationDate field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetExpirationDate() time.Time {
	if c != nil && c.ExpirationDate != nil {
		return c.ExpirationDate.Time
	}
	return time.Time{}
}

// GetTokenRequestor returns the TokenRequestor field if it's non-nil, zero value otherwise.
func (c *CardDigitalizationEvent) GetTokenRequestor() string {
	if c != nil && c.TokenRequestor != nil {
		return *c.TokenRequestor
	}
	return ""
}

// GetCards returns the Cards field.
func (c *CardEvent) GetCards() []*Card {
	if c != nil {
		return c.Cards
	}
	return nil
}

// GetCardID returns the CardID field if it's non-nil, zero value otherwise.
func (c *CardImage) GetCardID() string {
	if c != nil && c.CardID != nil {
		return *c.CardID
	}
	return ""
}

// GetFile returns the File field if it's non-nil, zero value otherwise.
func (c *CardImage) GetFile() string {
	if c != nil && c.File != nil {
		return *c.File
	}
	return ""
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *CardImage) GetID() string {
	if c != nil && c.ID != nil {
		return *c.ID
	}
	return ""
}

// GetCardImages returns the CardImages field.
func (c *CardImagesResponse) GetCardImages() []*CardImage {
	if c != nil {
		return c.CardImages
	}
	return nil
}

// GetCards returns the Cards field.
func (c *CardResponse) GetCards() []*Card {
	if c != nil {
		return c.Cards
	}
	return nil
}

// GetCountryRestrictionGroups returns the CountryRestrictionGroups field if it's non-nil, zero value otherwise.
func (c *CardRestrictionGroupLimits) GetCountryRestrictionGroups() string {
	if c != nil && c.CountryRestrictionGroups != nil {
		return *c.CountryRestrictionGroups
	}
	return ""
}

// GetMccRestrictionGroups returns the MccRestrictionGroups field if it's non-nil, zero value otherwise.
func (c *CardRestrictionGroupLimits) GetMccRestrictionGroups() string {
	if c != nil && c.MccRestrictionGroups != nil {
		return *c.MccRestrictionGroups
	}
	return ""
}

// GetMerchantIdRestrictionGroups returns the MerchantIdRestrictionGroups field if it's non-nil, zero value otherwise.
func (c *CardRestrictionGroupLimits) GetMerchantIdRestrictionGroups() string {
	if c != nil && c.MerchantIdRestrictionGroups != nil {
		return *c.MerchantIdRestrictionGroups
	}
	return ""
}

// GetPaymentDailyLimit returns the PaymentDailyLimit field if it's non-nil, zero value otherwise.
func (c *CardRestrictionGroupLimits) GetPaymentDailyLimit() float64 {
	if c != nil && c.PaymentDailyLimit != nil {
		return c.PaymentDailyLimit.Float64()
	}
	return 0.0
}

// GetAuthorizationIssuerID returns the AuthorizationIssuerID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizationIssuerID() string {
	if c != nil && c.AuthorizationIssuerID != nil {
		return *c.AuthorizationIssuerID
	}
	return ""
}

// GetAuthorizationIssuerTime returns the AuthorizationIssuerTime field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizationIssuerTime() time.Time {
	if c != nil && c.AuthorizationIssuerTime != nil {
		return c.AuthorizationIssuerTime.Time
	}
	return time.Time{}
}

// GetAuthorizationMTI returns the AuthorizationMTI field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizationMTI() string {
	if c != nil && c.AuthorizationMTI != nil {
		return *c.AuthorizationMTI
	}
	return ""
}

// GetAuthorizationNote returns the AuthorizationNote field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizationNote() string {
	if c != nil && c.AuthorizationNote != nil {
		return *c.AuthorizationNote
	}
	return ""
}

// GetAuthorizationResponseCode returns the AuthorizationResponseCode field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizationResponseCode() string {
	if c != nil && c.AuthorizationResponseCode != nil {
		return *c.AuthorizationResponseCode
	}
	return ""
}

// GetAuthorizedBalance returns the AuthorizedBalance field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetAuthorizedBalance() float64 {
	if c != nil && c.AuthorizedBalance != nil {
		return c.AuthorizedBalance.Float64()
	}
	return 0.0
}

// GetCardID returns the CardID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetCardID() string {
	if c != nil && c.CardID != nil {
		return c.CardID.String()
	}
	return ""
}

// GetCardTransactionID returns the CardTransactionID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetCardTransactionID() string {
	if c != nil && c.CardTransactionID != nil {
		return c.CardTransactionID.String()
	}
	return ""
}

// GetFees returns the Fees field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetFees() float64 {
	if c != nil && c.Fees != nil {
		return c.Fees.Float64()
	}
	return 0.0
}

// GetIs3DS returns the Is3DS field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetIs3DS() bool {
	if c != nil && c.Is3DS != nil {
		return c.Is3DS.Bool()
	}
	return false
}

// GetLimitATMAll returns the LimitATMAll field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitATMAll() int64 {
	if c != nil && c.LimitATMAll != nil {
		return c.LimitATMAll.Int64()
	}
	return 0
}

// GetLimitATMDay returns the LimitATMDay field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitATMDay() int64 {
	if c != nil && c.LimitATMDay != nil {
		return c.LimitATMDay.Int64()
	}
	return 0
}

// GetLimitATMMonth returns the LimitATMMonth field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitATMMonth() int64 {
	if c != nil && c.LimitATMMonth != nil {
		return c.LimitATMMonth.Int64()
	}
	return 0
}

// GetLimitATMWeek returns the LimitATMWeek field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitATMWeek() int64 {
	if c != nil && c.LimitATMWeek != nil {
		return c.LimitATMWeek.Int64()
	}
	return 0
}

// GetLimitATMYear returns the LimitATMYear field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitATMYear() int64 {
	if c != nil && c.LimitATMYear != nil {
		return c.LimitATMYear.Int64()
	}
	return 0
}

// GetLimitPaymentAll returns the LimitPaymentAll field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitPaymentAll() int64 {
	if c != nil && c.LimitPaymentAll != nil {
		return c.LimitPaymentAll.Int64()
	}
	return 0
}

// GetLimitPaymentDay returns the LimitPaymentDay field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitPaymentDay() int64 {
	if c != nil && c.LimitPaymentDay != nil {
		return c.LimitPaymentDay.Int64()
	}
	return 0
}

// GetLimitPaymentMonth returns the LimitPaymentMonth field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitPaymentMonth() int64 {
	if c != nil && c.LimitPaymentMonth != nil {
		return c.LimitPaymentMonth.Int64()
	}
	return 0
}

// GetLimitPaymentWeek returns the LimitPaymentWeek field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitPaymentWeek() int64 {
	if c != nil && c.LimitPaymentWeek != nil {
		return c.LimitPaymentWeek.Int64()
	}
	return 0
}

// GetLimitPaymentYear returns the LimitPaymentYear field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetLimitPaymentYear() int64 {
	if c != nil && c.LimitPaymentYear != nil {
		return c.LimitPaymentYear.Int64()
	}
	return 0
}

// GetMccCode returns the MccCode field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetMccCode() string {
	if c != nil && c.MccCode != nil {
		return *c.MccCode
	}
	return ""
}

// GetMerchantCity returns the MerchantCity field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetMerchantCity() string {
	if c != nil && c.MerchantCity != nil {
		return *c.MerchantCity
	}
	return ""
}

// GetMerchantCountry returns the MerchantCountry field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetMerchantCountry() string {
	if c != nil && c.MerchantCountry != nil {
		return *c.MerchantCountry
	}
	return ""
}

// GetMerchantID returns the MerchantID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetMerchantID() string {
	if c != nil && c.MerchantID != nil {
		return *c.MerchantID
	}
	return ""
}

// GetMerchantName returns the MerchantName field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetMerchantName() string {
	if c != nil && c.MerchantName != nil {
		return *c.MerchantName
	}
	return ""
}

// GetPanEntryMethod returns the PanEntryMethod field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPanEntryMethod() string {
	if c != nil && c.PanEntryMethod != nil {
		return *c.PanEntryMethod
	}
	return ""
}

// GetPaymentAmount returns the PaymentAmount field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentAmount() float64 {
	if c != nil && c.PaymentAmount != nil {
		return c.PaymentAmount.Float64()
	}
	return 0.0
}

// GetPaymentCountry returns the PaymentCountry field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentCountry() string {
	if c != nil && c.PaymentCountry != nil {
		return *c.PaymentCountry
	}
	return ""
}

// GetPaymentCurrency returns the PaymentCurrency field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentCurrency() string {
	if c != nil && c.PaymentCurrency != nil {
		return *c.PaymentCurrency
	}
	return ""
}

// GetPaymentID returns the PaymentID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentID() string {
	if c != nil && c.PaymentID != nil {
		return c.PaymentID.String()
	}
	return ""
}

// GetPaymentLocalAmount returns the PaymentLocalAmount field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentLocalAmount() float64 {
	if c != nil && c.PaymentLocalAmount != nil {
		return c.PaymentLocalAmount.Float64()
	}
	return 0.0
}

// GetPaymentLocalDate returns the PaymentLocalDate field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentLocalDate() time.Time {
	if c != nil && c.PaymentLocalDate != nil {
		return c.PaymentLocalDate.Time
	}
	return time.Time{}
}

// GetPaymentLocalTime returns the PaymentLocalTime field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentLocalTime() time.Time {
	if c != nil && c.PaymentLocalTime != nil {
		return c.PaymentLocalTime.Time
	}
	return time.Time{}
}

// GetPaymentStatus returns the PaymentStatus field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPaymentStatus() string {
	if c != nil && c.PaymentStatus != nil {
		return *c.PaymentStatus
	}
	return ""
}

// GetPosCardholderPresence returns the PosCardholderPresence field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPosCardholderPresence() bool {
	if c != nil && c.PosCardholderPresence != nil {
		return c.PosCardholderPresence.Bool()
	}
	return false
}

// GetPosCardPresence returns the PosCardPresence field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPosCardPresence() bool {
	if c != nil && c.PosCardPresence != nil {
		return c.PosCardPresence.Bool()
	}
	return false
}

// GetPosCountry returns the PosCountry field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPosCountry() string {
	if c != nil && c.PosCountry != nil {
		return *c.PosCountry
	}
	return ""
}

// GetPosPostcode returns the PosPostcode field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPosPostcode() string {
	if c != nil && c.PosPostcode != nil {
		return *c.PosPostcode
	}
	return ""
}

// GetPosTerminalID returns the PosTerminalID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPosTerminalID() string {
	if c != nil && c.PosTerminalID != nil {
		return *c.PosTerminalID
	}
	return ""
}

// GetPublicToken returns the PublicToken field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetPublicToken() string {
	if c != nil && c.PublicToken != nil {
		return *c.PublicToken
	}
	return ""
}

// GetTotalLimitATMAll returns the TotalLimitATMAll field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitATMAll() float64 {
	if c != nil && c.TotalLimitATMAll != nil {
		return c.TotalLimitATMAll.Float64()
	}
	return 0.0
}

// GetTotalLimitATMDay returns the TotalLimitATMDay field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitATMDay() float64 {
	if c != nil && c.TotalLimitATMDay != nil {
		return c.TotalLimitATMDay.Float64()
	}
	return 0.0
}

// GetTotalLimitATMMonth returns the TotalLimitATMMonth field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitATMMonth() float64 {
	if c != nil && c.TotalLimitATMMonth != nil {
		return c.TotalLimitATMMonth.Float64()
	}
	return 0.0
}

// GetTotalLimitATMWeek returns the TotalLimitATMWeek field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitATMWeek() float64 {
	if c != nil && c.TotalLimitATMWeek != nil {
		return c.TotalLimitATMWeek.Float64()
	}
	return 0.0
}

// GetTotalLimitATMYear returns the TotalLimitATMYear field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitATMYear() float64 {
	if c != nil && c.TotalLimitATMYear != nil {
		return c.TotalLimitATMYear.Float64()
	}
	return 0.0
}

// GetTotalLimitPaymentAll returns the TotalLimitPaymentAll field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitPaymentAll() float64 {
	if c != nil && c.TotalLimitPaymentAll != nil {
		return c.TotalLimitPaymentAll.Float64()
	}
	return 0.0
}

// GetTotalLimitPaymentDay returns the TotalLimitPaymentDay field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitPaymentDay() float64 {
	if c != nil && c.TotalLimitPaymentDay != nil {
		return c.TotalLimitPaymentDay.Float64()
	}
	return 0.0
}

// GetTotalLimitPaymentMonth returns the TotalLimitPaymentMonth field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitPaymentMonth() float64 {
	if c != nil && c.TotalLimitPaymentMonth != nil {
		return c.TotalLimitPaymentMonth.Float64()
	}
	return 0.0
}

// GetTotalLimitPaymentWeek returns the TotalLimitPaymentWeek field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitPaymentWeek() float64 {
	if c != nil && c.TotalLimitPaymentWeek != nil {
		return c.TotalLimitPaymentWeek.Float64()
	}
	return 0.0
}

// GetTotalLimitPaymentYear returns the TotalLimitPaymentYear field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalLimitPaymentYear() float64 {
	if c != nil && c.TotalLimitPaymentYear != nil {
		return c.TotalLimitPaymentYear.Float64()
	}
	return 0.0
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetTotalRows() int64 {
	if c != nil && c.TotalRows != nil {
		return c.TotalRows.Int64()
	}
	return 0
}

// GetWalletCurrency returns the WalletCurrency field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetWalletCurrency() string {
	if c != nil && c.WalletCurrency != nil {
		return *c.WalletCurrency
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (c *CardTransaction) GetWalletID() string {
	if c != nil && c.WalletID != nil {
		return c.WalletID.String()
	}
	return ""
}

// GetCardTransactions returns the CardTransactions field.
func (c *CardTransactionEvent) GetCardTransactions() []*CardTransaction {
	if c != nil {
		return c.CardTransactions
	}
	return nil
}

// GetCardTransactions returns the CardTransactions field.
func (c *CardTransactionResponse) GetCardTransactions() []*CardTransaction {
	if c != nil {
		return c.CardTransactions
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetAmount() string {
	if c != nil && c.Amount != nil {
		return *c.Amount
	}
	return ""
}

// GetChargebackCreatedDate returns the ChargebackCreatedDate field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetChargebackCreatedDate() time.Time {
	if c != nil && c.ChargebackCreatedDate != nil {
		return c.ChargebackCreatedDate.Time
	}
	return time.Time{}
}

// GetChargebackReason returns the ChargebackReason field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetChargebackReason() string {
	if c != nil && c.ChargebackReason != nil {
		return *c.ChargebackReason
	}
	return ""
}

// GetCountry returns the Country field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetCountry() string {
	if c != nil && c.Country != nil {
		return *c.Country
	}
	return ""
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetCurrency() Currency {
	if c != nil && c.Currency != nil {
		return *c.Currency
	}
	return Currency("")
}

// GetIsRefunded returns the IsRefunded field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetIsRefunded() bool {
	if c != nil && c.IsRefunded != nil {
		return c.IsRefunded.Bool()
	}
	return false
}

// GetPayinCreatedDate returns the PayinCreatedDate field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPayinCreatedDate() time.Time {
	if c != nil && c.PayinCreatedDate != nil {
		return c.PayinCreatedDate.Time
	}
	return time.Time{}
}

// GetPayinID returns the PayinID field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPayinID() string {
	if c != nil && c.PayinID != nil {
		return c.PayinID.String()
	}
	return ""
}

// GetPayinRefundCreatedDate returns the PayinRefundCreatedDate field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPayinRefundCreatedDate() time.Time {
	if c != nil && c.PayinRefundCreatedDate != nil {
		return c.PayinRefundCreatedDate.Time
	}
	return time.Time{}
}

// GetPayinRefundID returns the PayinRefundID field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPayinRefundID() string {
	if c != nil && c.PayinRefundID != nil {
		return c.PayinRefundID.String()
	}
	return ""
}

// GetPaymentBrand returns the PaymentBrand field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPaymentBrand() string {
	if c != nil && c.PaymentBrand != nil {
		return *c.PaymentBrand
	}
	return ""
}

// GetPaymentMethodId returns the PaymentMethodId field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetPaymentMethodId() string {
	if c != nil && c.PaymentMethodId != nil {
		return c.PaymentMethodId.String()
	}
	return ""
}

// GetTransactionReference returns the TransactionReference field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetTransactionReference() string {
	if c != nil && c.TransactionReference != nil {
		return c.TransactionReference.String()
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetUserID() string {
	if c != nil && c.UserID != nil {
		return c.UserID.String()
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (c *Chargeback) GetWalletID() string {
	if c != nil && c.WalletID != nil {
		return c.WalletID.String()
	}
	return ""
}

// GetCountries returns the Countries field.
func (c *CountryRestrictionGroup) GetCountries() []*types.Identifier {
	if c != nil {
		return c.Countries
	}
	return nil
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetCreatedDate() time.Time {
	if c != nil && c.CreatedDate != nil {
		return c.CreatedDate.Time
	}
	return time.Time{}
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetID() string {
	if c != nil && c.ID != nil {
		return c.ID.String()
	}
	return ""
}

// GetIsWhitelist returns the IsWhitelist field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetIsWhitelist() bool {
	if c != nil && c.IsWhitelist != nil {
		return c.IsWhitelist.Bool()
	}
	return false
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetModifiedDate() time.Time {
	if c != nil && c.ModifiedDate != nil {
		return c.ModifiedDate.Time
	}
	return time.Time{}
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetName() string {
	if c != nil && c.Name != nil {
		return *c.Name
	}
	return ""
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetStartDate() time.Time {
	if c != nil && c.StartDate != nil {
		return c.StartDate.Time
	}
	return time.Time{}
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (c *CountryRestrictionGroup) GetStatus() string {
	if c != nil && c.Status != nil {
		return *c.Status
	}
	return ""
}

// GetCountryRestrictionGroups returns the CountryRestrictionGroups field.
func (c *CountryRestrictionGroupEvent) GetCountryRestrictionGroups() []*CountryRestrictionGroup {
	if c != nil {
		return c.CountryRestrictionGroups
	}
	return nil
}

// GetClientID returns the ClientID field if it's non-nil, zero value otherwise.
func (d *Document) GetClientID() string {
	if d != nil && d.ClientID != nil {
		return d.ClientID.String()
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (d *Document) GetCodeStatus() string {
	if d != nil && d.CodeStatus != nil {
		return d.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (d *Document) GetCreatedDate() time.Time {
	if d != nil && d.CreatedDate != nil {
		return d.CreatedDate.Time
	}
	return time.Time{}
}

// GetDocumentID returns the DocumentID field if it's non-nil, zero value otherwise.
func (d *Document) GetDocumentID() string {
	if d != nil && d.DocumentID != nil {
		return d.DocumentID.String()
	}
	return ""
}

// GetDocumentStatus returns the DocumentStatus field.
func (d *Document) GetDocumentStatus() *DocumentStatus {
	if d != nil {
		return d.DocumentStatus
	}
	return nil
}

// GetDocumentTag returns the DocumentTag field if it's non-nil, zero value otherwise.
func (d *Document) GetDocumentTag() string {
	if d != nil && d.DocumentTag != nil {
		return *d.DocumentTag
	}
	return ""
}

// GetDocumentType returns the DocumentType field if it's non-nil, zero value otherwise.
func (d *Document) GetDocumentType() string {
	if d != nil && d.DocumentType != nil {
		return *d.DocumentType
	}
	return ""
}

// GetDocumentTypeID returns the DocumentTypeID field.
func (d *Document) GetDocumentTypeID() *DocumentType {
	if d != nil {
		return d.DocumentTypeID
	}
	return nil
}

// GetFilename returns the Filename field if it's non-nil, zero value otherwise.
func (d *Document) GetFilename() string {
	if d != nil && d.Filename != nil {
		return *d.Filename
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (d *Document) GetInformationStatus() string {
	if d != nil && d.InformationStatus != nil {
		return *d.InformationStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (d *Document) GetModifiedDate() time.Time {
	if d != nil && d.ModifiedDate != nil {
		return d.ModifiedDate.Time
	}
	return time.Time{}
}

// GetResidenceID returns the ResidenceID field if it's non-nil, zero value otherwise.
func (d *Document) GetResidenceID() string {
	if d != nil && d.ResidenceID != nil {
		return d.ResidenceID.String()
	}
	return ""
}

// GetTemporaryURL returns the TemporaryURL field if it's non-nil, zero value otherwise.
func (d *Document) GetTemporaryURL() string {
	if d != nil && d.TemporaryURL != nil {
		return *d.TemporaryURL
	}
	return ""
}

// GetTemporaryURLThumb returns the TemporaryURLThumb field if it's non-nil, zero value otherwise.
func (d *Document) GetTemporaryURLThumb() string {
	if d != nil && d.TemporaryURLThumb != nil {
		return *d.TemporaryURLThumb
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (d *Document) GetTotalRows() int64 {
	if d != nil && d.TotalRows != nil {
		return d.TotalRows.Int64()
	}
	return 0
}

// GetUserFirstname returns the UserFirstname field if it's non-nil, zero value otherwise.
func (d *Document) GetUserFirstname() string {
	if d != nil && d.UserFirstname != nil {
		return *d.UserFirstname
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (d *Document) GetUserID() string {
	if d != nil && d.UserID != nil {
		return d.UserID.String()
	}
	return ""
}

// GetUserLastname returns the UserLastname field if it's non-nil, zero value otherwise.
func (d *Document) GetUserLastname() string {
	if d != nil && d.UserLastname != nil {
		return *d.UserLastname
	}
	return ""
}

// GetDocuments returns the Documents field.
func (d *DocumentEvent) GetDocuments() []*Document {
	if d != nil {
		return d.Documents
	}
	return nil
}

// GetDocuments returns the Documents field.
func (d *DocumentResponse) GetDocuments() []*Document {
	if d != nil {
		return d.Documents
	}
	return nil
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (e *Event) GetID() string {
	if e != nil && e.ID != nil {
		return *e.ID
	}
	return ""
}

// GetObject returns the Object field if it's non-nil, zero value otherwise.
func (e *Event) GetObject() string {
	if e != nil && e.Object != nil {
		return *e.Object
	}
	return ""
}

// GetObjectID returns the ObjectID field if it's non-nil, zero value otherwise.
func (e *Event) GetObjectID() string {
	if e != nil && e.ObjectID != nil {
		return *e.ObjectID
	}
	return ""
}

// GetPayloadSignature returns the PayloadSignature field if it's non-nil, zero value otherwise.
func (e *Event) GetPayloadSignature() string {
	if e != nil && e.PayloadSignature != nil {
		return *e.PayloadSignature
	}
	return ""
}

// GetRawPayload returns the RawPayload field if it's non-nil, zero value otherwise.
func (e *Event) GetRawPayload() json.RawMessage {
	if e != nil && e.RawPayload != nil {
		return *e.RawPayload
	}
	return json.RawMessage{}
}

// GetType returns the Type field if it's non-nil, zero value otherwise.
func (e *Event) GetType() string {
	if e != nil && e.Type != nil {
		return *e.Type
	}
	return ""
}

// GetIdentificationID returns the IdentificationID field if it's non-nil, zero value otherwise.
func (i *Identification) GetIdentificationID() string {
	if i != nil && i.IdentificationID != nil {
		return *i.IdentificationID
	}
	return ""
}

// GetIdentificationURL returns the IdentificationURL field if it's non-nil, zero value otherwise.
func (i *Identification) GetIdentificationURL() string {
	if i != nil && i.IdentificationURL != nil {
		return *i.IdentificationURL
	}
	return ""
}

// GetIdentification returns the Identification field.
func (i *IdentificationResponse) GetIdentification() *Identification {
	if i != nil {
		return i.Identification
	}
	return nil
}

// GetComment returns the Comment field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetComment() string {
	if k != nil && k.Comment != nil {
		return *k.Comment
	}
	return ""
}

// GetIdentity returns the Identity field.
func (k *KYCLivenessEvent) GetIdentity() *KYCLivenessIdentity {
	if k != nil {
		return k.Identity
	}
	return nil
}

// GetKycStatus returns the KycStatus field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetKycStatus() string {
	if k != nil && k.KycStatus != nil {
		return *k.KycStatus
	}
	return ""
}

// GetScore returns the Score field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetScore() int {
	if k != nil && k.Score != nil {
		return *k.Score
	}
	return 0
}

// GetStartedAt returns the StartedAt field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetStartedAt() time.Time {
	if k != nil && k.StartedAt != nil {
		return *k.StartedAt
	}
	return time.Time{}
}

// GetUpdatedAt returns the UpdatedAt field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetUpdatedAt() time.Time {
	if k != nil && k.UpdatedAt != nil {
		return *k.UpdatedAt
	}
	return time.Time{}
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (k *KYCLivenessEvent) GetUserID() string {
	if k != nil && k.UserID != nil {
		return *k.UserID
	}
	return ""
}

// GetBirthDate returns the BirthDate field if it's non-nil, zero value otherwise.
func (k *KYCLivenessIdentity) GetBirthDate() string {
	if k != nil && k.BirthDate != nil {
		return *k.BirthDate
	}
	return ""
}

// GetFirstName returns the FirstName field if it's non-nil, zero value otherwise.
func (k *KYCLivenessIdentity) GetFirstName() string {
	if k != nil && k.FirstName != nil {
		return *k.FirstName
	}
	return ""
}

// GetLastName returns the LastName field if it's non-nil, zero value otherwise.
func (k *KYCLivenessIdentity) GetLastName() string {
	if k != nil && k.LastName != nil {
		return *k.LastName
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCodeStatus() string {
	if m != nil && m.CodeStatus != nil {
		return m.CodeStatus.String()
	}
	return ""
}

// GetContractDescription returns the ContractDescription field if it's non-nil, zero value otherwise.
func (m *Mandate) GetContractDescription() string {
	if m != nil && m.ContractDescription != nil {
		return *m.ContractDescription
	}
	return ""
}

// GetContractIdentificationNumber returns the ContractIdentificationNumber field if it's non-nil, zero value otherwise.
func (m *Mandate) GetContractIdentificationNumber() string {
	if m != nil && m.ContractIdentificationNumber != nil {
		return *m.ContractIdentificationNumber
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreatedDate() time.Time {
	if m != nil && m.CreatedDate != nil {
		return m.CreatedDate.Time
	}
	return time.Time{}
}

// GetCreatedIP returns the CreatedIP field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreatedIP() string {
	if m != nil && m.CreatedIP != nil {
		return *m.CreatedIP
	}
	return ""
}

// GetCreditorAddress returns the CreditorAddress field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorAddress() string {
	if m != nil && m.CreditorAddress != nil {
		return *m.CreditorAddress
	}
	return ""
}

// GetCreditorCity returns the CreditorCity field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorCity() string {
	if m != nil && m.CreditorCity != nil {
		return *m.CreditorCity
	}
	return ""
}

// GetCreditorCountry returns the CreditorCountry field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorCountry() string {
	if m != nil && m.CreditorCountry != nil {
		return *m.CreditorCountry
	}
	return ""
}

// GetCreditorName returns the CreditorName field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorName() string {
	if m != nil && m.CreditorName != nil {
		return *m.CreditorName
	}
	return ""
}

// GetCreditorReferenceIdentificationCode returns the CreditorReferenceIdentificationCode field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorReferenceIdentificationCode() string {
	if m != nil && m.CreditorReferenceIdentificationCode != nil {
		return *m.CreditorReferenceIdentificationCode
	}
	return ""
}

// GetCreditorReferencePartyName returns the CreditorReferencePartyName field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorReferencePartyName() string {
	if m != nil && m.CreditorReferencePartyName != nil {
		return *m.CreditorReferencePartyName
	}
	return ""
}

// GetCreditorZipCode returns the CreditorZipCode field if it's non-nil, zero value otherwise.
func (m *Mandate) GetCreditorZipCode() string {
	if m != nil && m.CreditorZipCode != nil {
		return *m.CreditorZipCode
	}
	return ""
}

// GetDebtorAddress returns the DebtorAddress field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorAddress() string {
	if m != nil && m.DebtorAddress != nil {
		return *m.DebtorAddress
	}
	return ""
}

// GetDebtorBIC returns the DebtorBIC field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorBIC() string {
	if m != nil && m.DebtorBIC != nil {
		return *m.DebtorBIC
	}
	return ""
}

// GetDebtorCity returns the DebtorCity field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorCity() string {
	if m != nil && m.DebtorCity != nil {
		return *m.DebtorCity
	}
	return ""
}

// GetDebtorCountry returns the DebtorCountry field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorCountry() string {
	if m != nil && m.DebtorCountry != nil {
		return *m.DebtorCountry
	}
	return ""
}

// GetDebtorIBAN returns the DebtorIBAN field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorIBAN() string {
	if m != nil && m.DebtorIBAN != nil {
		return *m.DebtorIBAN
	}
	return ""
}

// GetDebtorIdentificationCode returns the DebtorIdentificationCode field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorIdentificationCode() string {
	if m != nil && m.DebtorIdentificationCode != nil {
		return *m.DebtorIdentificationCode
	}
	return ""
}

// GetDebtorName returns the DebtorName field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorName() string {
	if m != nil && m.DebtorName != nil {
		return *m.DebtorName
	}
	return ""
}

// GetDebtorReferenceIdentificationCode returns the DebtorReferenceIdentificationCode field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorReferenceIdentificationCode() string {
	if m != nil && m.DebtorReferenceIdentificationCode != nil {
		return *m.DebtorReferenceIdentificationCode
	}
	return ""
}

// GetDebtorReferencePartyName returns the DebtorReferencePartyName field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorReferencePartyName() string {
	if m != nil && m.DebtorReferencePartyName != nil {
		return *m.DebtorReferencePartyName
	}
	return ""
}

// GetDebtorSignatureIP returns the DebtorSignatureIP field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorSignatureIP() string {
	if m != nil && m.DebtorSignatureIP != nil {
		return *m.DebtorSignatureIP
	}
	return ""
}

// GetDebtorZipCode returns the DebtorZipCode field if it's non-nil, zero value otherwise.
func (m *Mandate) GetDebtorZipCode() string {
	if m != nil && m.DebtorZipCode != nil {
		return *m.DebtorZipCode
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (m *Mandate) GetInformationStatus() string {
	if m != nil && m.InformationStatus != nil {
		return *m.InformationStatus
	}
	return ""
}

// GetIsPaper returns the IsPaper field if it's non-nil, zero value otherwise.
func (m *Mandate) GetIsPaper() bool {
	if m != nil && m.IsPaper != nil {
		return m.IsPaper.Bool()
	}
	return false
}

// GetLegalInformations returns the LegalInformations field if it's non-nil, zero value otherwise.
func (m *Mandate) GetLegalInformations() string {
	if m != nil && m.LegalInformations != nil {
		return *m.LegalInformations
	}
	return ""
}

// GetMandateID returns the MandateID field if it's non-nil, zero value otherwise.
func (m *Mandate) GetMandateID() string {
	if m != nil && m.MandateID != nil {
		return m.MandateID.String()
	}
	return ""
}

// GetMandateStatus returns the MandateStatus field if it's non-nil, zero value otherwise.
func (m *Mandate) GetMandateStatus() string {
	if m != nil && m.MandateStatus != nil {
		return *m.MandateStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (m *Mandate) GetModifiedDate() time.Time {
	if m != nil && m.ModifiedDate != nil {
		return m.ModifiedDate.Time
	}
	return time.Time{}
}

// GetRevocationSignatureDate returns the RevocationSignatureDate field if it's non-nil, zero value otherwise.
func (m *Mandate) GetRevocationSignatureDate() time.Time {
	if m != nil && m.RevocationSignatureDate != nil {
		return m.RevocationSignatureDate.Time
	}
	return time.Time{}
}

// GetSDDType returns the SDDType field if it's non-nil, zero value otherwise.
func (m *Mandate) GetSDDType() string {
	if m != nil && m.SDDType != nil {
		return *m.SDDType
	}
	return ""
}

// GetSepaCreditorIdentifier returns the SepaCreditorIdentifier field if it's non-nil, zero value otherwise.
func (m *Mandate) GetSepaCreditorIdentifier() string {
	if m != nil && m.SepaCreditorIdentifier != nil {
		return *m.SepaCreditorIdentifier
	}
	return ""
}

// GetSequenceType returns the SequenceType field if it's non-nil, zero value otherwise.
func (m *Mandate) GetSequenceType() string {
	if m != nil && m.SequenceType != nil {
		return *m.SequenceType
	}
	return ""
}

// GetSignatureDate returns the SignatureDate field if it's non-nil, zero value otherwise.
func (m *Mandate) GetSignatureDate() time.Time {
	if m != nil && m.SignatureDate != nil {
		return m.SignatureDate.Time
	}
	return time.Time{}
}

// GetSigned returns the Signed field if it's non-nil, zero value otherwise.
func (m *Mandate) GetSigned() bool {
	if m != nil && m.Signed != nil {
		return m.Signed.Bool()
	}
	return false
}

// GetTitle returns the Title field if it's non-nil, zero value otherwise.
func (m *Mandate) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

// GetUniqueMandateReference returns the UniqueMandateReference field if it's non-nil, zero value otherwise.
func (m *Mandate) GetUniqueMandateReference() string {
	if m != nil && m.UniqueMandateReference != nil {
		return *m.UniqueMandateReference
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (m *Mandate) GetUserID() string {
	if m != nil && m.UserID != nil {
		return m.UserID.String()
	}
	return ""
}

// GetUserIDUltimateCreditor returns the UserIDUltimateCreditor field if it's non-nil, zero value otherwise.
func (m *Mandate) GetUserIDUltimateCreditor() string {
	if m != nil && m.UserIDUltimateCreditor != nil {
		return m.UserIDUltimateCreditor.String()
	}
	return ""
}

// GetMandates returns the Mandates field.
func (m *MandateEvent) GetMandates() []*Mandate {
	if m != nil {
		return m.Mandates
	}
	return nil
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetCreatedDate() time.Time {
	if m != nil && m.CreatedDate != nil {
		return m.CreatedDate.Time
	}
	return time.Time{}
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetID() string {
	if m != nil && m.ID != nil {
		return m.ID.String()
	}
	return ""
}

// GetIsWhitelist returns the IsWhitelist field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetIsWhitelist() bool {
	if m != nil && m.IsWhitelist != nil {
		return m.IsWhitelist.Bool()
	}
	return false
}

// GetMerchants returns the Merchants field.
func (m *MCCRestrictionGroup) GetMerchants() []*types.Identifier {
	if m != nil {
		return m.Merchants
	}
	return nil
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetModifiedDate() time.Time {
	if m != nil && m.ModifiedDate != nil {
		return m.ModifiedDate.Time
	}
	return time.Time{}
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetStartDate() time.Time {
	if m != nil && m.StartDate != nil {
		return m.StartDate.Time
	}
	return time.Time{}
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (m *MCCRestrictionGroup) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

// GetMCCRestrictionGroups returns the MCCRestrictionGroups field.
func (m *MCCRestrictionGroupEvent) GetMCCRestrictionGroups() []*MCCRestrictionGroup {
	if m != nil {
		return m.MCCRestrictionGroups
	}
	return nil
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetCreatedDate() time.Time {
	if m != nil && m.CreatedDate != nil {
		return m.CreatedDate.Time
	}
	return time.Time{}
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetID() string {
	if m != nil && m.ID != nil {
		return m.ID.String()
	}
	return ""
}

// GetIsWhitelist returns the IsWhitelist field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetIsWhitelist() bool {
	if m != nil && m.IsWhitelist != nil {
		return m.IsWhitelist.Bool()
	}
	return false
}

// GetMerchants returns the Merchants field.
func (m *MIDRestrictionGroup) GetMerchants() []*types.Identifier {
	if m != nil {
		return m.Merchants
	}
	return nil
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetModifiedDate() time.Time {
	if m != nil && m.ModifiedDate != nil {
		return m.ModifiedDate.Time
	}
	return time.Time{}
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// GetStartDate returns the StartDate field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetStartDate() time.Time {
	if m != nil && m.StartDate != nil {
		return m.StartDate.Time
	}
	return time.Time{}
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (m *MIDRestrictionGroup) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

// GetMerchantIDRestrictionGroups returns the MerchantIDRestrictionGroups field.
func (m *MIDRestrictionGroupEvent) GetMerchantIDRestrictionGroups() []*MIDRestrictionGroup {
	if m != nil {
		return m.MerchantIDRestrictionGroups
	}
	return nil
}

// GetAdditionalData returns the AdditionalData field.
func (p *Payin) GetAdditionalData() *PayinAdditionalData {
	if p != nil {
		return p.AdditionalData
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (p *Payin) GetAmount() float64 {
	if p != nil && p.Amount != nil {
		return p.Amount.Float64()
	}
	return 0.0
}

// GetCartID returns the CartID field if it's non-nil, zero value otherwise.
func (p *Payin) GetCartID() string {
	if p != nil && p.CartID != nil {
		return p.CartID.String()
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (p *Payin) GetCodeStatus() string {
	if p != nil && p.CodeStatus != nil {
		return p.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreatedDate() time.Time {
	if p != nil && p.CreatedDate != nil {
		return p.CreatedDate.Time
	}
	return time.Time{}
}

// GetCreatedIP returns the CreatedIP field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreatedIP() string {
	if p != nil && p.CreatedIP != nil {
		return *p.CreatedIP
	}
	return ""
}

// GetCreditorAddressLine returns the CreditorAddressLine field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreditorAddressLine() string {
	if p != nil && p.CreditorAddressLine != nil {
		return *p.CreditorAddressLine
	}
	return ""
}

// GetCreditorBIC returns the CreditorBIC field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreditorBIC() string {
	if p != nil && p.CreditorBIC != nil {
		return *p.CreditorBIC
	}
	return ""
}

// GetCreditorCountry returns the CreditorCountry field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreditorCountry() string {
	if p != nil && p.CreditorCountry != nil {
		return *p.CreditorCountry
	}
	return ""
}

// GetCreditorIBAN returns the CreditorIBAN field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreditorIBAN() string {
	if p != nil && p.CreditorIBAN != nil {
		return *p.CreditorIBAN
	}
	return ""
}

// GetCreditorName returns the CreditorName field if it's non-nil, zero value otherwise.
func (p *Payin) GetCreditorName() string {
	if p != nil && p.CreditorName != nil {
		return *p.CreditorName
	}
	return ""
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (p *Payin) GetCurrency() Currency {
	if p != nil && p.Currency != nil {
		return *p.Currency
	}
	return Currency("")
}

// GetDbtrIBAN returns the DbtrIBAN field if it's non-nil, zero value otherwise.
func (p *Payin) GetDbtrIBAN() string {
	if p != nil && p.DbtrIBAN != nil {
		return *p.DbtrIBAN
	}
	return ""
}

// GetDistributorFee returns the DistributorFee field if it's non-nil, zero value otherwise.
func (p *Payin) GetDistributorFee() float64 {
	if p != nil && p.DistributorFee != nil {
		return p.DistributorFee.Float64()
	}
	return 0.0
}

// GetForwardURL returns the ForwardURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetForwardURL() string {
	if p != nil && p.ForwardURL != nil {
		return *p.ForwardURL
	}
	return ""
}

// GetIBANBIC returns the IBANBIC field if it's non-nil, zero value otherwise.
func (p *Payin) GetIBANBIC() string {
	if p != nil && p.IBANBIC != nil {
		return *p.IBANBIC
	}
	return ""
}

// GetIBANFullname returns the IBANFullname field if it's non-nil, zero value otherwise.
func (p *Payin) GetIBANFullname() string {
	if p != nil && p.IBANFullname != nil {
		return *p.IBANFullname
	}
	return ""
}

// GetIBANID returns the IBANID field if it's non-nil, zero value otherwise.
func (p *Payin) GetIBANID() string {
	if p != nil && p.IBANID != nil {
		return *p.IBANID
	}
	return ""
}

// GetIBANTxEndToEndID returns the IBANTxEndToEndID field if it's non-nil, zero value otherwise.
func (p *Payin) GetIBANTxEndToEndID() string {
	if p != nil && p.IBANTxEndToEndID != nil {
		return *p.IBANTxEndToEndID
	}
	return ""
}

// GetIBANTxID returns the IBANTxID field if it's non-nil, zero value otherwise.
func (p *Payin) GetIBANTxID() string {
	if p != nil && p.IBANTxID != nil {
		return *p.IBANTxID
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (p *Payin) GetInformationStatus() string {
	if p != nil && p.InformationStatus != nil {
		return *p.InformationStatus
	}
	return ""
}

// GetMandateID returns the MandateID field if it's non-nil, zero value otherwise.
func (p *Payin) GetMandateID() string {
	if p != nil && p.MandateID != nil {
		return p.MandateID.String()
	}
	return ""
}

// GetMessageToUser returns the MessageToUser field if it's non-nil, zero value otherwise.
func (p *Payin) GetMessageToUser() string {
	if p != nil && p.MessageToUser != nil {
		return *p.MessageToUser
	}
	return ""
}

// GetPayinDate returns the PayinDate field if it's non-nil, zero value otherwise.
func (p *Payin) GetPayinDate() time.Time {
	if p != nil && p.PayinDate != nil {
		return p.PayinDate.Time
	}
	return time.Time{}
}

// GetPayinID returns the PayinID field if it's non-nil, zero value otherwise.
func (p *Payin) GetPayinID() string {
	if p != nil && p.PayinID != nil {
		return p.PayinID.String()
	}
	return ""
}

// GetPayinStatus returns the PayinStatus field if it's non-nil, zero value otherwise.
func (p *Payin) GetPayinStatus() string {
	if p != nil && p.PayinStatus != nil {
		return *p.PayinStatus
	}
	return ""
}

// GetPayinTag returns the PayinTag field if it's non-nil, zero value otherwise.
func (p *Payin) GetPayinTag() string {
	if p != nil && p.PayinTag != nil {
		return *p.PayinTag
	}
	return ""
}

// GetPaymentAcceptedURL returns the PaymentAcceptedURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentAcceptedURL() string {
	if p != nil && p.PaymentAcceptedURL != nil {
		return *p.PaymentAcceptedURL
	}
	return ""
}

// GetPaymentCanceledURL returns the PaymentCanceledURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentCanceledURL() string {
	if p != nil && p.PaymentCanceledURL != nil {
		return *p.PaymentCanceledURL
	}
	return ""
}

// GetPaymentExceptionURL returns the PaymentExceptionURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentExceptionURL() string {
	if p != nil && p.PaymentExceptionURL != nil {
		return *p.PaymentExceptionURL
	}
	return ""
}

// GetPaymentHTML returns the PaymentHTML field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentHTML() string {
	if p != nil && p.PaymentHTML != nil {
		return *p.PaymentHTML
	}
	return ""
}

// GetPaymentLanguage returns the PaymentLanguage field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentLanguage() string {
	if p != nil && p.PaymentLanguage != nil {
		return *p.PaymentLanguage
	}
	return ""
}

// GetPaymentMethodID returns the PaymentMethodID field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentMethodID() string {
	if p != nil && p.PaymentMethodID != nil {
		return p.PaymentMethodID.String()
	}
	return ""
}

// GetPaymentPostDataURL returns the PaymentPostDataURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentPostDataURL() string {
	if p != nil && p.PaymentPostDataURL != nil {
		return *p.PaymentPostDataURL
	}
	return ""
}

// GetPaymentPostURL returns the PaymentPostURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentPostURL() string {
	if p != nil && p.PaymentPostURL != nil {
		return *p.PaymentPostURL
	}
	return ""
}

// GetPaymentRefusedURL returns the PaymentRefusedURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentRefusedURL() string {
	if p != nil && p.PaymentRefusedURL != nil {
		return *p.PaymentRefusedURL
	}
	return ""
}

// GetPaymentWaitingURL returns the PaymentWaitingURL field if it's non-nil, zero value otherwise.
func (p *Payin) GetPaymentWaitingURL() string {
	if p != nil && p.PaymentWaitingURL != nil {
		return *p.PaymentWaitingURL
	}
	return ""
}

// GetRefundAmount returns the RefundAmount field if it's non-nil, zero value otherwise.
func (p *Payin) GetRefundAmount() float64 {
	if p != nil && p.RefundAmount != nil {
		return p.RefundAmount.Float64()
	}
	return 0.0
}

// GetSubtotalItems returns the SubtotalItems field if it's non-nil, zero value otherwise.
func (p *Payin) GetSubtotalItems() float64 {
	if p != nil && p.SubtotalItems != nil {
		return p.SubtotalItems.Float64()
	}
	return 0.0
}

// GetSubtotalServices returns the SubtotalServices field if it's non-nil, zero value otherwise.
func (p *Payin) GetSubtotalServices() float64 {
	if p != nil && p.SubtotalServices != nil {
		return p.SubtotalServices.Float64()
	}
	return 0.0
}

// GetSubtotalTax returns the SubtotalTax field if it's non-nil, zero value otherwise.
func (p *Payin) GetSubtotalTax() float64 {
	if p != nil && p.SubtotalTax != nil {
		return p.SubtotalTax.Float64()
	}
	return 0.0
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (p *Payin) GetTotalRows() int64 {
	if p != nil && p.TotalRows != nil {
		return p.TotalRows.Int64()
	}
	return 0
}

// GetUserFirstname returns the UserFirstname field if it's non-nil, zero value otherwise.
func (p *Payin) GetUserFirstname() string {
	if p != nil && p.UserFirstname != nil {
		return *p.UserFirstname
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (p *Payin) GetUserID() string {
	if p != nil && p.UserID != nil {
		return p.UserID.String()
	}
	return ""
}

// GetUserLastname returns the UserLastname field if it's non-nil, zero value otherwise.
func (p *Payin) GetUserLastname() string {
	if p != nil && p.UserLastname != nil {
		return *p.UserLastname
	}
	return ""
}

// GetVirtualIBANID returns the VirtualIBANID field if it's non-nil, zero value otherwise.
func (p *Payin) GetVirtualIBANID() string {
	if p != nil && p.VirtualIBANID != nil {
		return p.VirtualIBANID.String()
	}
	return ""
}

// GetVirtualIBANReference returns the VirtualIBANReference field if it's non-nil, zero value otherwise.
func (p *Payin) GetVirtualIBANReference() string {
	if p != nil && p.VirtualIBANReference != nil {
		return *p.VirtualIBANReference
	}
	return ""
}

// GetWalletAlias returns the WalletAlias field if it's non-nil, zero value otherwise.
func (p *Payin) GetWalletAlias() string {
	if p != nil && p.WalletAlias != nil {
		return *p.WalletAlias
	}
	return ""
}

// GetWalletEventName returns the WalletEventName field if it's non-nil, zero value otherwise.
func (p *Payin) GetWalletEventName() string {
	if p != nil && p.WalletEventName != nil {
		return *p.WalletEventName
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (p *Payin) GetWalletID() string {
	if p != nil && p.WalletID != nil {
		return p.WalletID.String()
	}
	return ""
}

// GetPayins returns the Payins field.
func (p *PayinEvent) GetPayins() []*Payin {
	if p != nil {
		return p.Payins
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetAmount() float64 {
	if p != nil && p.Amount != nil {
		return p.Amount.Float64()
	}
	return 0.0
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetCodeStatus() string {
	if p != nil && p.CodeStatus != nil {
		return p.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetCreatedDate() time.Time {
	if p != nil && p.CreatedDate != nil {
		return p.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetCurrency() Currency {
	if p != nil && p.Currency != nil {
		return *p.Currency
	}
	return Currency("")
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetInformationStatus() string {
	if p != nil && p.InformationStatus != nil {
		return *p.InformationStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetModifiedDate() time.Time {
	if p != nil && p.ModifiedDate != nil {
		return p.ModifiedDate.Time
	}
	return time.Time{}
}

// GetPayinID returns the PayinID field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetPayinID() string {
	if p != nil && p.PayinID != nil {
		return p.PayinID.String()
	}
	return ""
}

// GetPayinRefundDate returns the PayinRefundDate field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetPayinRefundDate() time.Time {
	if p != nil && p.PayinRefundDate != nil {
		return p.PayinRefundDate.Time
	}
	return time.Time{}
}

// GetPayinRefundID returns the PayinRefundID field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetPayinRefundID() string {
	if p != nil && p.PayinRefundID != nil {
		return p.PayinRefundID.String()
	}
	return ""
}

// GetPayinRefundStatus returns the PayinRefundStatus field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetPayinRefundStatus() string {
	if p != nil && p.PayinRefundStatus != nil {
		return *p.PayinRefundStatus
	}
	return ""
}

// GetPayinRefundTag returns the PayinRefundTag field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetPayinRefundTag() string {
	if p != nil && p.PayinRefundTag != nil {
		return *p.PayinRefundTag
	}
	return ""
}

// GetReasonTms returns the ReasonTms field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetReasonTms() string {
	if p != nil && p.ReasonTms != nil {
		return *p.ReasonTms
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetTotalRows() int64 {
	if p != nil && p.TotalRows != nil {
		return p.TotalRows.Int64()
	}
	return 0
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (p *PayinRefund) GetWalletID() string {
	if p != nil && p.WalletID != nil {
		return p.WalletID.String()
	}
	return ""
}

// GetPayinRefunds returns the PayinRefunds field.
func (p *PayinRefundEvent) GetPayinRefunds() []*PayinRefund {
	if p != nil {
		return p.PayinRefunds
	}
	return nil
}

// GetPayins returns the Payins field.
func (p *PayinResponse) GetPayins() []*Payin {
	if p != nil {
		return p.Payins
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (p *Payout) GetAmount() float64 {
	if p != nil && p.Amount != nil {
		return p.Amount.Float64()
	}
	return 0.0
}

// GetBankAccountIBAN returns the BankAccountIBAN field if it's non-nil, zero value otherwise.
func (p *Payout) GetBankAccountIBAN() string {
	if p != nil && p.BankAccountIBAN != nil {
		return *p.BankAccountIBAN
	}
	return ""
}

// GetBankAccountID returns the BankAccountID field if it's non-nil, zero value otherwise.
func (p *Payout) GetBankAccountID() string {
	if p != nil && p.BankAccountID != nil {
		return p.BankAccountID.String()
	}
	return ""
}

// GetBeneficiaryID returns the BeneficiaryID field if it's non-nil, zero value otherwise.
func (p *Payout) GetBeneficiaryID() string {
	if p != nil && p.BeneficiaryID != nil {
		return p.BeneficiaryID.String()
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (p *Payout) GetCodeStatus() string {
	if p != nil && p.CodeStatus != nil {
		return p.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (p *Payout) GetCreatedDate() time.Time {
	if p != nil && p.CreatedDate != nil {
		return p.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (p *Payout) GetCurrency() Currency {
	if p != nil && p.Currency != nil {
		return *p.Currency
	}
	return Currency("")
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (p *Payout) GetInformationStatus() string {
	if p != nil && p.InformationStatus != nil {
		return *p.InformationStatus
	}
	return ""
}

// GetLabel returns the Label field if it's non-nil, zero value otherwise.
func (p *Payout) GetLabel() string {
	if p != nil && p.Label != nil {
		return *p.Label
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (p *Payout) GetModifiedDate() time.Time {
	if p != nil && p.ModifiedDate != nil {
		return p.ModifiedDate.Time
	}
	return time.Time{}
}

// GetPartnerFee returns the PartnerFee field if it's non-nil, zero value otherwise.
func (p *Payout) GetPartnerFee() float64 {
	if p != nil && p.PartnerFee != nil {
		return p.PartnerFee.Float64()
	}
	return 0.0
}

// GetPayoutDate returns the PayoutDate field if it's non-nil, zero value otherwise.
func (p *Payout) GetPayoutDate() time.Time {
	if p != nil && p.PayoutDate != nil {
		return p.PayoutDate.Time
	}
	return time.Time{}
}

// GetPayoutID returns the PayoutID field if it's non-nil, zero value otherwise.
func (p *Payout) GetPayoutID() string {
	if p != nil && p.PayoutID != nil {
		return p.PayoutID.String()
	}
	return ""
}

// GetPayoutStatus returns the PayoutStatus field if it's non-nil, zero value otherwise.
func (p *Payout) GetPayoutStatus() string {
	if p != nil && p.PayoutStatus != nil {
		return *p.PayoutStatus
	}
	return ""
}

// GetPayoutTag returns the PayoutTag field if it's non-nil, zero value otherwise.
func (p *Payout) GetPayoutTag() string {
	if p != nil && p.PayoutTag != nil {
		return *p.PayoutTag
	}
	return ""
}

// GetPayoutType returns the PayoutType field if it's non-nil, zero value otherwise.
func (p *Payout) GetPayoutType() string {
	if p != nil && p.PayoutType != nil {
		return *p.PayoutType
	}
	return ""
}

// GetPayoutTypeID returns the PayoutTypeID field.
func (p *Payout) GetPayoutTypeID() *PayoutType {
	if p != nil {
		return p.PayoutTypeID
	}
	return nil
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (p *Payout) GetTotalRows() int64 {
	if p != nil && p.TotalRows != nil {
		return p.TotalRows.Int64()
	}
	return 0
}

// GetUniqueMandateReference returns the UniqueMandateReference field if it's non-nil, zero value otherwise.
func (p *Payout) GetUniqueMandateReference() string {
	if p != nil && p.UniqueMandateReference != nil {
		return *p.UniqueMandateReference
	}
	return ""
}

// GetUserFirstname returns the UserFirstname field if it's non-nil, zero value otherwise.
func (p *Payout) GetUserFirstname() string {
	if p != nil && p.UserFirstname != nil {
		return *p.UserFirstname
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (p *Payout) GetUserID() string {
	if p != nil && p.UserID != nil {
		return p.UserID.String()
	}
	return ""
}

// GetUserLastname returns the UserLastname field if it's non-nil, zero value otherwise.
func (p *Payout) GetUserLastname() string {
	if p != nil && p.UserLastname != nil {
		return *p.UserLastname
	}
	return ""
}

// GetWalletAlias returns the WalletAlias field if it's non-nil, zero value otherwise.
func (p *Payout) GetWalletAlias() string {
	if p != nil && p.WalletAlias != nil {
		return *p.WalletAlias
	}
	return ""
}

// GetWalletEventName returns the WalletEventName field if it's non-nil, zero value otherwise.
func (p *Payout) GetWalletEventName() string {
	if p != nil && p.WalletEventName != nil {
		return *p.WalletEventName
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (p *Payout) GetWalletID() string {
	if p != nil && p.WalletID != nil {
		return p.WalletID.String()
	}
	return ""
}

// GetPayouts returns the Payouts field.
func (p *PayoutEvent) GetPayouts() []*Payout {
	if p != nil {
		return p.Payouts
	}
	return nil
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetCodeStatus() string {
	if p != nil && p.CodeStatus != nil {
		return p.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetCreatedDate() time.Time {
	if p != nil && p.CreatedDate != nil {
		return p.CreatedDate.Time
	}
	return time.Time{}
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetID() string {
	if p != nil && p.ID != nil {
		return p.ID.String()
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetInformationStatus() string {
	if p != nil && p.InformationStatus != nil {
		return *p.InformationStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetModifiedDate() time.Time {
	if p != nil && p.ModifiedDate != nil {
		return p.ModifiedDate.Time
	}
	return time.Time{}
}

// GetPayoutID returns the PayoutID field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetPayoutID() string {
	if p != nil && p.PayoutID != nil {
		return p.PayoutID.String()
	}
	return ""
}

// GetReasonCode returns the ReasonCode field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetReasonCode() string {
	if p != nil && p.ReasonCode != nil {
		return *p.ReasonCode
	}
	return ""
}

// GetRefundAmount returns the RefundAmount field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRefundAmount() float64 {
	if p != nil && p.RefundAmount != nil {
		return p.RefundAmount.Float64()
	}
	return 0.0
}

// GetRefundComment returns the RefundComment field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRefundComment() string {
	if p != nil && p.RefundComment != nil {
		return *p.RefundComment
	}
	return ""
}

// GetRefundCurrency returns the RefundCurrency field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRefundCurrency() Currency {
	if p != nil && p.RefundCurrency != nil {
		return *p.RefundCurrency
	}
	return Currency("")
}

// GetRefundDate returns the RefundDate field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRefundDate() time.Time {
	if p != nil && p.RefundDate != nil {
		return p.RefundDate.Time
	}
	return time.Time{}
}

// GetRequestAmount returns the RequestAmount field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRequestAmount() float64 {
	if p != nil && p.RequestAmount != nil {
		return p.RequestAmount.Float64()
	}
	return 0.0
}

// GetRequestComment returns the RequestComment field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRequestComment() string {
	if p != nil && p.RequestComment != nil {
		return *p.RequestComment
	}
	return ""
}

// GetRequestCurrency returns the RequestCurrency field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetRequestCurrency() Currency {
	if p != nil && p.RequestCurrency != nil {
		return *p.RequestCurrency
	}
	return Currency("")
}

// GetTag returns the Tag field if it's non-nil, zero value otherwise.
func (p *PayoutRefund) GetTag() string {
	if p != nil && p.Tag != nil {
		return *p.Tag
	}
	return ""
}

// GetPayoutRefunds returns the PayoutRefunds field.
func (p *PayoutRefundEvent) GetPayoutRefunds() []*PayoutRefund {
	if p != nil {
		return p.PayoutRefunds
	}
	return nil
}

// GetPayouts returns the Payouts field.
func (p *PayoutResponse) GetPayouts() []*Payout {
	if p != nil {
		return p.Payouts
	}
	return nil
}

// GetAdditionalInformation returns the AdditionalInformation field if it's non-nil, zero value otherwise.
func (r *RecallR) GetAdditionalInformation() string {
	if r != nil && r.AdditionalInformation != nil {
		return *r.AdditionalInformation
	}
	return ""
}

// GetCxlID returns the CxlID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetCxlID() string {
	if r != nil && r.CxlID != nil {
		return *r.CxlID
	}
	return ""
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetID() string {
	if r != nil && r.ID != nil {
		return r.ID.String()
	}
	return ""
}

// GetPayinRefundID returns the PayinRefundID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetPayinRefundID() string {
	if r != nil && r.PayinRefundID != nil {
		return r.PayinRefundID.String()
	}
	return ""
}

// GetReasonCode returns the ReasonCode field if it's non-nil, zero value otherwise.
func (r *RecallR) GetReasonCode() string {
	if r != nil && r.ReasonCode != nil {
		return *r.ReasonCode
	}
	return ""
}

// GetReceivedDate returns the ReceivedDate field if it's non-nil, zero value otherwise.
func (r *RecallR) GetReceivedDate() time.Time {
	if r != nil && r.ReceivedDate != nil {
		return r.ReceivedDate.Time
	}
	return time.Time{}
}

// GetSctrAmount returns the SctrAmount field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrAmount() float64 {
	if r != nil && r.SctrAmount != nil {
		return r.SctrAmount.Float64()
	}
	return 0.0
}

// GetSctrCurrency returns the SctrCurrency field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrCurrency() Currency {
	if r != nil && r.SctrCurrency != nil {
		return *r.SctrCurrency
	}
	return Currency("")
}

// GetSctrDbtrName returns the SctrDbtrName field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrDbtrName() string {
	if r != nil && r.SctrDbtrName != nil {
		return *r.SctrDbtrName
	}
	return ""
}

// GetSctrID returns the SctrID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrID() string {
	if r != nil && r.SctrID != nil {
		return r.SctrID.String()
	}
	return ""
}

// GetSctrSettelmentDate returns the SctrSettelmentDate field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrSettelmentDate() time.Time {
	if r != nil && r.SctrSettelmentDate != nil {
		return r.SctrSettelmentDate.Time
	}
	return time.Time{}
}

// GetSctrSettlementDate returns the SctrSettlementDate field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrSettlementDate() time.Time {
	if r != nil && r.SctrSettlementDate != nil {
		return r.SctrSettlementDate.Time
	}
	return time.Time{}
}

// GetSctrTxID returns the SctrTxID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetSctrTxID() string {
	if r != nil && r.SctrTxID != nil {
		return r.SctrTxID.String()
	}
	return ""
}

// GetStatusID returns the StatusID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetStatusID() string {
	if r != nil && r.StatusID != nil {
		return r.StatusID.String()
	}
	return ""
}

// GetStatusLabel returns the StatusLabel field if it's non-nil, zero value otherwise.
func (r *RecallR) GetStatusLabel() string {
	if r != nil && r.StatusLabel != nil {
		return *r.StatusLabel
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetUserID() string {
	if r != nil && r.UserID != nil {
		return r.UserID.String()
	}
	return ""
}

// GetUserName returns the UserName field if it's non-nil, zero value otherwise.
func (r *RecallR) GetUserName() string {
	if r != nil && r.UserName != nil {
		return *r.UserName
	}
	return ""
}

// GetUserStatusID returns the UserStatusID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetUserStatusID() string {
	if r != nil && r.UserStatusID != nil {
		return r.UserStatusID.String()
	}
	return ""
}

// GetWalletActivationDate returns the WalletActivationDate field if it's non-nil, zero value otherwise.
func (r *RecallR) GetWalletActivationDate() time.Time {
	if r != nil && r.WalletActivationDate != nil {
		return r.WalletActivationDate.Time
	}
	return time.Time{}
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetWalletID() string {
	if r != nil && r.WalletID != nil {
		return r.WalletID.String()
	}
	return ""
}

// GetWalletStatusID returns the WalletStatusID field if it's non-nil, zero value otherwise.
func (r *RecallR) GetWalletStatusID() string {
	if r != nil && r.WalletStatusID != nil {
		return r.WalletStatusID.String()
	}
	return ""
}

// GetRecallRs returns the RecallRs field.
func (r *RecallREvent) GetRecallRs() []*RecallR {
	if r != nil {
		return r.RecallRs
	}
	return nil
}

// GetCountryRestrictionGroups returns the CountryRestrictionGroups field if it's non-nil, zero value otherwise.
func (r *RestrictionGroupLimits) GetCountryRestrictionGroups() json.Number {
	if r != nil && r.CountryRestrictionGroups != nil {
		return *r.CountryRestrictionGroups
	}
	return json.Number("")
}

// GetMccRestrictionGroups returns the MccRestrictionGroups field if it's non-nil, zero value otherwise.
func (r *RestrictionGroupLimits) GetMccRestrictionGroups() json.Number {
	if r != nil && r.MccRestrictionGroups != nil {
		return *r.MccRestrictionGroups
	}
	return json.Number("")
}

// GetMerchantIdRestrictionGroups returns the MerchantIdRestrictionGroups field if it's non-nil, zero value otherwise.
func (r *RestrictionGroupLimits) GetMerchantIdRestrictionGroups() json.Number {
	if r != nil && r.MerchantIdRestrictionGroups != nil {
		return *r.MerchantIdRestrictionGroups
	}
	return json.Number("")
}

// GetPaymentDailyLimit returns the PaymentDailyLimit field if it's non-nil, zero value otherwise.
func (r *RestrictionGroupLimits) GetPaymentDailyLimit() json.Number {
	if r != nil && r.PaymentDailyLimit != nil {
		return *r.PaymentDailyLimit
	}
	return json.Number("")
}

// GetIsRecurrent returns the IsRecurrent field if it's non-nil, zero value otherwise.
func (s *SDDB2BWhitelist) GetIsRecurrent() bool {
	if s != nil && s.IsRecurrent != nil {
		return s.IsRecurrent.Bool()
	}
	return false
}

// GetUniqueMandateReference returns the UniqueMandateReference field if it's non-nil, zero value otherwise.
func (s *SDDB2BWhitelist) GetUniqueMandateReference() string {
	if s != nil && s.UniqueMandateReference != nil {
		return *s.UniqueMandateReference
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (s *SDDB2BWhitelist) GetWalletID() string {
	if s != nil && s.WalletID != nil {
		return s.WalletID.String()
	}
	return ""
}

// GetCreditorAddress returns the CreditorAddress field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetCreditorAddress() string {
	if s != nil && s.CreditorAddress != nil {
		return *s.CreditorAddress
	}
	return ""
}

// GetCreditorCountry returns the CreditorCountry field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetCreditorCountry() string {
	if s != nil && s.CreditorCountry != nil {
		return *s.CreditorCountry
	}
	return ""
}

// GetCreditorName returns the CreditorName field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetCreditorName() string {
	if s != nil && s.CreditorName != nil {
		return *s.CreditorName
	}
	return ""
}

// GetDebitorAddress returns the DebitorAddress field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetDebitorAddress() string {
	if s != nil && s.DebitorAddress != nil {
		return *s.DebitorAddress
	}
	return ""
}

// GetDebitorCountry returns the DebitorCountry field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetDebitorCountry() string {
	if s != nil && s.DebitorCountry != nil {
		return *s.DebitorCountry
	}
	return ""
}

// GetDebitorName returns the DebitorName field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetDebitorName() string {
	if s != nil && s.DebitorName != nil {
		return *s.DebitorName
	}
	return ""
}

// GetInterbankSettlementAmount returns the InterbankSettlementAmount field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetInterbankSettlementAmount() float64 {
	if s != nil && s.InterbankSettlementAmount != nil {
		return s.InterbankSettlementAmount.Float64()
	}
	return 0.0
}

// GetReturnReasonCode returns the ReturnReasonCode field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetReturnReasonCode() string {
	if s != nil && s.ReturnReasonCode != nil {
		return *s.ReturnReasonCode
	}
	return ""
}

// GetTransactionID returns the TransactionID field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetTransactionID() string {
	if s != nil && s.TransactionID != nil {
		return s.TransactionID.String()
	}
	return ""
}

// GetUnstructuredField returns the UnstructuredField field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetUnstructuredField() string {
	if s != nil && s.UnstructuredField != nil {
		return *s.UnstructuredField
	}
	return ""
}

// GetVirtualIBANID returns the VirtualIBANID field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetVirtualIBANID() string {
	if s != nil && s.VirtualIBANID != nil {
		return s.VirtualIBANID.String()
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (s *SepaSctr) GetWalletID() string {
	if s != nil && s.WalletID != nil {
		return s.WalletID.String()
	}
	return ""
}

// GetSepaSctrs returns the SepaSctrs field.
func (s *SepaSctrEvent) GetSepaSctrs() []*SepaSctr {
	if s != nil {
		return s.SepaSctrs
	}
	return nil
}

// GetBankaccountID returns the BankaccountID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetBankaccountID() string {
	if s != nil && s.BankaccountID != nil {
		return s.BankaccountID.String()
	}
	return ""
}

// GetBeneficiaryID returns the BeneficiaryID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetBeneficiaryID() string {
	if s != nil && s.BeneficiaryID != nil {
		return s.BeneficiaryID.String()
	}
	return ""
}

// GetCreditorAddress returns the CreditorAddress field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetCreditorAddress() string {
	if s != nil && s.CreditorAddress != nil {
		return *s.CreditorAddress
	}
	return ""
}

// GetCreditorCountry returns the CreditorCountry field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetCreditorCountry() string {
	if s != nil && s.CreditorCountry != nil {
		return *s.CreditorCountry
	}
	return ""
}

// GetCreditorName returns the CreditorName field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetCreditorName() string {
	if s != nil && s.CreditorName != nil {
		return *s.CreditorName
	}
	return ""
}

// GetDateOfSignature returns the DateOfSignature field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetDateOfSignature() time.Time {
	if s != nil && s.DateOfSignature != nil {
		return s.DateOfSignature.Time
	}
	return time.Time{}
}

// GetDebitorAddress returns the DebitorAddress field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetDebitorAddress() string {
	if s != nil && s.DebitorAddress != nil {
		return *s.DebitorAddress
	}
	return ""
}

// GetDebitorCountry returns the DebitorCountry field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetDebitorCountry() string {
	if s != nil && s.DebitorCountry != nil {
		return *s.DebitorCountry
	}
	return ""
}

// GetDebitorName returns the DebitorName field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetDebitorName() string {
	if s != nil && s.DebitorName != nil {
		return *s.DebitorName
	}
	return ""
}

// GetInterbankSettlementAmount returns the InterbankSettlementAmount field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetInterbankSettlementAmount() float64 {
	if s != nil && s.InterbankSettlementAmount != nil {
		return s.InterbankSettlementAmount.Float64()
	}
	return 0.0
}

// GetMandateID returns the MandateID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetMandateID() string {
	if s != nil && s.MandateID != nil {
		return *s.MandateID
	}
	return ""
}

// GetRejectReasonCode returns the RejectReasonCode field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetRejectReasonCode() string {
	if s != nil && s.RejectReasonCode != nil {
		return *s.RejectReasonCode
	}
	return ""
}

// GetRequestedCollectionDate returns the RequestedCollectionDate field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetRequestedCollectionDate() time.Time {
	if s != nil && s.RequestedCollectionDate != nil {
		return s.RequestedCollectionDate.Time
	}
	return time.Time{}
}

// GetSepaCreditorIdentifier returns the SepaCreditorIdentifier field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetSepaCreditorIdentifier() string {
	if s != nil && s.SepaCreditorIdentifier != nil {
		return *s.SepaCreditorIdentifier
	}
	return ""
}

// GetSequenceType returns the SequenceType field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetSequenceType() string {
	if s != nil && s.SequenceType != nil {
		return *s.SequenceType
	}
	return ""
}

// GetTransactionID returns the TransactionID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetTransactionID() string {
	if s != nil && s.TransactionID != nil {
		return s.TransactionID.String()
	}
	return ""
}

// GetUnstructuredField returns the UnstructuredField field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetUnstructuredField() string {
	if s != nil && s.UnstructuredField != nil {
		return *s.UnstructuredField
	}
	return ""
}

// GetVirtualIbanID returns the VirtualIbanID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetVirtualIbanID() string {
	if s != nil && s.VirtualIbanID != nil {
		return s.VirtualIbanID.String()
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (s *SepaSddr) GetWalletID() string {
	if s != nil && s.WalletID != nil {
		return s.WalletID.String()
	}
	return ""
}

// GetSepaSddrs returns the SepaSddrs field.
func (s *SepaSddrEvent) GetSepaSddrs() []*SepaSddr {
	if s != nil {
		return s.SepaSddrs
	}
	return nil
}

// GetCountry returns the Country field if it's non-nil, zero value otherwise.
func (t *TaxResidence) GetCountry() string {
	if t != nil && t.Country != nil {
		return *t.Country
	}
	return ""
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (t *TaxResidence) GetID() int64 {
	if t != nil && t.ID != nil {
		return *t.ID
	}
	return 0
}

// GetLiabilityWaiver returns the LiabilityWaiver field if it's non-nil, zero value otherwise.
func (t *TaxResidence) GetLiabilityWaiver() bool {
	if t != nil && t.LiabilityWaiver != nil {
		return *t.LiabilityWaiver
	}
	return false
}

// GetTaxPayerID returns the TaxPayerID field if it's non-nil, zero value otherwise.
func (t *TaxResidence) GetTaxPayerID() string {
	if t != nil && t.TaxPayerID != nil {
		return *t.TaxPayerID
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (t *TaxResidence) GetUserID() int64 {
	if t != nil && t.UserID != nil {
		return *t.UserID
	}
	return 0
}

// GetTaxResidences returns the TaxResidences field.
func (t *TaxResidencesResponse) GetTaxResidences() []*TaxResidence {
	if t != nil {
		return t.TaxResidences
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (t *Transaction) GetAmount() float64 {
	if t != nil && t.Amount != nil {
		return t.Amount.Float64()
	}
	return 0.0
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (t *Transaction) GetCreatedDate() time.Time {
	if t != nil && t.CreatedDate != nil {
		return t.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (t *Transaction) GetCurrency() Currency {
	if t != nil && t.Currency != nil {
		return *t.Currency
	}
	return Currency("")
}

// GetDescription returns the Description field if it's non-nil, zero value otherwise.
func (t *Transaction) GetDescription() string {
	if t != nil && t.Description != nil {
		return *t.Description
	}
	return ""
}

// GetExecutionDate returns the ExecutionDate field if it's non-nil, zero value otherwise.
func (t *Transaction) GetExecutionDate() time.Time {
	if t != nil && t.ExecutionDate != nil {
		return t.ExecutionDate.Time
	}
	return time.Time{}
}

// GetForeignID returns the ForeignID field if it's non-nil, zero value otherwise.
func (t *Transaction) GetForeignID() string {
	if t != nil && t.ForeignID != nil {
		return t.ForeignID.String()
	}
	return ""
}

// GetName returns the Name field if it's non-nil, zero value otherwise.
func (t *Transaction) GetName() string {
	if t != nil && t.Name != nil {
		return *t.Name
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (t *Transaction) GetTotalRows() int64 {
	if t != nil && t.TotalRows != nil {
		return t.TotalRows.Int64()
	}
	return 0
}

// GetTransactionID returns the TransactionID field if it's non-nil, zero value otherwise.
func (t *Transaction) GetTransactionID() string {
	if t != nil && t.TransactionID != nil {
		return t.TransactionID.String()
	}
	return ""
}

// GetTransactionType returns the TransactionType field if it's non-nil, zero value otherwise.
func (t *Transaction) GetTransactionType() string {
	if t != nil && t.TransactionType != nil {
		return *t.TransactionType
	}
	return ""
}

// GetValueDate returns the ValueDate field if it's non-nil, zero value otherwise.
func (t *Transaction) GetValueDate() time.Time {
	if t != nil && t.ValueDate != nil {
		return t.ValueDate.Time
	}
	return time.Time{}
}

// GetWalletCreditBalance returns the WalletCreditBalance field if it's non-nil, zero value otherwise.
func (t *Transaction) GetWalletCreditBalance() float64 {
	if t != nil && t.WalletCreditBalance != nil {
		return t.WalletCreditBalance.Float64()
	}
	return 0.0
}

// GetWalletCreditID returns the WalletCreditID field if it's non-nil, zero value otherwise.
func (t *Transaction) GetWalletCreditID() string {
	if t != nil && t.WalletCreditID != nil {
		return t.WalletCreditID.String()
	}
	return ""
}

// GetWalletDebitBalance returns the WalletDebitBalance field if it's non-nil, zero value otherwise.
func (t *Transaction) GetWalletDebitBalance() float64 {
	if t != nil && t.WalletDebitBalance != nil {
		return t.WalletDebitBalance.Float64()
	}
	return 0.0
}

// GetWalletDebitID returns the WalletDebitID field if it's non-nil, zero value otherwise.
func (t *Transaction) GetWalletDebitID() string {
	if t != nil && t.WalletDebitID != nil {
		return t.WalletDebitID.String()
	}
	return ""
}

// GetTransactions returns the Transactions field.
func (t *TransactionEvent) GetTransactions() []*Transaction {
	if t != nil {
		return t.Transactions
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (t *Transfer) GetAmount() float64 {
	if t != nil && t.Amount != nil {
		return t.Amount.Float64()
	}
	return 0.0
}

// GetBeneficiaryWalletAlias returns the BeneficiaryWalletAlias field if it's non-nil, zero value otherwise.
func (t *Transfer) GetBeneficiaryWalletAlias() string {
	if t != nil && t.BeneficiaryWalletAlias != nil {
		return *t.BeneficiaryWalletAlias
	}
	return ""
}

// GetBeneficiaryWalletEventName returns the BeneficiaryWalletEventName field if it's non-nil, zero value otherwise.
func (t *Transfer) GetBeneficiaryWalletEventName() string {
	if t != nil && t.BeneficiaryWalletEventName != nil {
		return *t.BeneficiaryWalletEventName
	}
	return ""
}

// GetBeneficiaryWalletID returns the BeneficiaryWalletID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetBeneficiaryWalletID() string {
	if t != nil && t.BeneficiaryWalletID != nil {
		return t.BeneficiaryWalletID.String()
	}
	return ""
}

// GetBeneficiaryWalletTypeID returns the BeneficiaryWalletTypeID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetBeneficiaryWalletTypeID() string {
	if t != nil && t.BeneficiaryWalletTypeID != nil {
		return t.BeneficiaryWalletTypeID.String()
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (t *Transfer) GetCodeStatus() string {
	if t != nil && t.CodeStatus != nil {
		return t.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (t *Transfer) GetCreatedDate() time.Time {
	if t != nil && t.CreatedDate != nil {
		return t.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (t *Transfer) GetCurrency() Currency {
	if t != nil && t.Currency != nil {
		return *t.Currency
	}
	return Currency("")
}

// GetForeignID returns the ForeignID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetForeignID() string {
	if t != nil && t.ForeignID != nil {
		return t.ForeignID.String()
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (t *Transfer) GetInformationStatus() string {
	if t != nil && t.InformationStatus != nil {
		return *t.InformationStatus
	}
	return ""
}

// GetLabel returns the Label field if it's non-nil, zero value otherwise.
func (t *Transfer) GetLabel() string {
	if t != nil && t.Label != nil {
		return *t.Label
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (t *Transfer) GetModifiedDate() time.Time {
	if t != nil && t.ModifiedDate != nil {
		return t.ModifiedDate.Time
	}
	return time.Time{}
}

// GetPartnerFee returns the PartnerFee field if it's non-nil, zero value otherwise.
func (t *Transfer) GetPartnerFee() float64 {
	if t != nil && t.PartnerFee != nil {
		return t.PartnerFee.Float64()
	}
	return 0.0
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (t *Transfer) GetTotalRows() int64 {
	if t != nil && t.TotalRows != nil {
		return t.TotalRows.Int64()
	}
	return 0
}

// GetTransferDate returns the TransferDate field if it's non-nil, zero value otherwise.
func (t *Transfer) GetTransferDate() time.Time {
	if t != nil && t.TransferDate != nil {
		return t.TransferDate.Time
	}
	return time.Time{}
}

// GetTransferID returns the TransferID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetTransferID() string {
	if t != nil && t.TransferID != nil {
		return t.TransferID.String()
	}
	return ""
}

// GetTransferStatus returns the TransferStatus field if it's non-nil, zero value otherwise.
func (t *Transfer) GetTransferStatus() string {
	if t != nil && t.TransferStatus != nil {
		return *t.TransferStatus
	}
	return ""
}

// GetTransferTag returns the TransferTag field if it's non-nil, zero value otherwise.
func (t *Transfer) GetTransferTag() string {
	if t != nil && t.TransferTag != nil {
		return *t.TransferTag
	}
	return ""
}

// GetTransferTypeID returns the TransferTypeID field.
func (t *Transfer) GetTransferTypeID() *TransferType {
	if t != nil {
		return t.TransferTypeID
	}
	return nil
}

// GetWalletAlias returns the WalletAlias field if it's non-nil, zero value otherwise.
func (t *Transfer) GetWalletAlias() string {
	if t != nil && t.WalletAlias != nil {
		return *t.WalletAlias
	}
	return ""
}

// GetWalletEventName returns the WalletEventName field if it's non-nil, zero value otherwise.
func (t *Transfer) GetWalletEventName() string {
	if t != nil && t.WalletEventName != nil {
		return *t.WalletEventName
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetWalletID() string {
	if t != nil && t.WalletID != nil {
		return t.WalletID.String()
	}
	return ""
}

// GetWalletTypeID returns the WalletTypeID field if it's non-nil, zero value otherwise.
func (t *Transfer) GetWalletTypeID() string {
	if t != nil && t.WalletTypeID != nil {
		return t.WalletTypeID.String()
	}
	return ""
}

// GetTransfers returns the Transfers field.
func (t *TransferEvent) GetTransfers() []*Transfer {
	if t != nil {
		return t.Transfers
	}
	return nil
}

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetAmount() float64 {
	if t != nil && t.Amount != nil {
		return t.Amount.Float64()
	}
	return 0.0
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetCodeStatus() string {
	if t != nil && t.CodeStatus != nil {
		return t.CodeStatus.String()
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetCreatedDate() time.Time {
	if t != nil && t.CreatedDate != nil {
		return t.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetCurrency() Currency {
	if t != nil && t.Currency != nil {
		return *t.Currency
	}
	return Currency("")
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetInformationStatus() string {
	if t != nil && t.InformationStatus != nil {
		return *t.InformationStatus
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetModifiedDate() time.Time {
	if t != nil && t.ModifiedDate != nil {
		return t.ModifiedDate.Time
	}
	return time.Time{}
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTotalRows() int64 {
	if t != nil && t.TotalRows != nil {
		return t.TotalRows.Int64()
	}
	return 0
}

// GetTransferID returns the TransferID field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTransferID() string {
	if t != nil && t.TransferID != nil {
		return t.TransferID.String()
	}
	return ""
}

// GetTransferRefundDate returns the TransferRefundDate field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTransferRefundDate() time.Time {
	if t != nil && t.TransferRefundDate != nil {
		return t.TransferRefundDate.Time
	}
	return time.Time{}
}

// GetTransferRefundID returns the TransferRefundID field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTransferRefundID() string {
	if t != nil && t.TransferRefundID != nil {
		return t.TransferRefundID.String()
	}
	return ""
}

// GetTransferRefundStatus returns the TransferRefundStatus field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTransferRefundStatus() string {
	if t != nil && t.TransferRefundStatus != nil {
		return *t.TransferRefundStatus
	}
	return ""
}

// GetTransferRefundTag returns the TransferRefundTag field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetTransferRefundTag() string {
	if t != nil && t.TransferRefundTag != nil {
		return *t.TransferRefundTag
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (t *TransferRefund) GetWalletID() string {
	if t != nil && t.WalletID != nil {
		return t.WalletID.String()
	}
	return ""
}

// GetTransferRefunds returns the TransferRefunds field.
func (t *TransferRefundEvent) GetTransferRefunds() []*TransferRefund {
	if t != nil {
		return t.TransferRefunds
	}
	return nil
}

// GetTransfers returns the Transfers field.
func (t *TransferResponse) GetTransfers() []*Transfer {
	if t != nil {
		return t.Transfers
	}
	return nil
}

// GetActivityOutsideEu returns the ActivityOutsideEu field if it's non-nil, zero value otherwise.
func (u *User) GetActivityOutsideEu() bool {
	if u != nil && u.ActivityOutsideEu != nil {
		return u.ActivityOutsideEu.Bool()
	}
	return false
}

// GetAddress1 returns the Address1 field if it's non-nil, zero value otherwise.
func (u *User) GetAddress1() string {
	if u != nil && u.Address1 != nil {
		return *u.Address1
	}
	return ""
}

// GetAddress2 returns the Address2 field if it's non-nil, zero value otherwise.
func (u *User) GetAddress2() string {
	if u != nil && u.Address2 != nil {
		return *u.Address2
	}
	return ""
}

// GetAddress3 returns the Address3 field if it's non-nil, zero value otherwise.
func (u *User) GetAddress3() string {
	if u != nil && u.Address3 != nil {
		return *u.Address3
	}
	return ""
}

// GetBirthCountry returns the BirthCountry field if it's non-nil, zero value otherwise.
func (u *User) GetBirthCountry() string {
	if u != nil && u.BirthCountry != nil {
		return *u.BirthCountry
	}
	return ""
}

// GetBirthday returns the Birthday field if it's non-nil, zero value otherwise.
func (u *User) GetBirthday() time.Time {
	if u != nil && u.Birthday != nil {
		return u.Birthday.Time
	}
	return time.Time{}
}

// GetCity returns the City field if it's non-nil, zero value otherwise.
func (u *User) GetCity() string {
	if u != nil && u.City != nil {
		return *u.City
	}
	return ""
}

// GetClientID returns the ClientID field if it's non-nil, zero value otherwise.
func (u *User) GetClientID() string {
	if u != nil && u.ClientID != nil {
		return u.ClientID.String()
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (u *User) GetCodeStatus() string {
	if u != nil && u.CodeStatus != nil {
		return u.CodeStatus.String()
	}
	return ""
}

// GetControllingPersonType returns the ControllingPersonType field.
func (u *User) GetControllingPersonType() *ControllingPersonType {
	if u != nil {
		return u.ControllingPersonType
	}
	return nil
}

// GetCountry returns the Country field if it's non-nil, zero value otherwise.
func (u *User) GetCountry() string {
	if u != nil && u.Country != nil {
		return *u.Country
	}
	return ""
}

// GetCountryName returns the CountryName field if it's non-nil, zero value otherwise.
func (u *User) GetCountryName() string {
	if u != nil && u.CountryName != nil {
		return *u.CountryName
	}
	return ""
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (u *User) GetCreatedDate() time.Time {
	if u != nil && u.CreatedDate != nil {
		return u.CreatedDate.Time
	}
	return time.Time{}
}

// GetEconomicSanctions returns the EconomicSanctions field if it's non-nil, zero value otherwise.
func (u *User) GetEconomicSanctions() bool {
	if u != nil && u.EconomicSanctions != nil {
		return u.EconomicSanctions.Bool()
	}
	return false
}

// GetEffectiveBeneficiary returns the EffectiveBeneficiary field if it's non-nil, zero value otherwise.
func (u *User) GetEffectiveBeneficiary() float64 {
	if u != nil && u.EffectiveBeneficiary != nil {
		return u.EffectiveBeneficiary.Float64()
	}
	return 0.0
}

// GetEmail returns the Email field if it's non-nil, zero value otherwise.
func (u *User) GetEmail() string {
	if u != nil && u.Email != nil {
		return *u.Email
	}
	return ""
}

// GetEmployeeType returns the EmployeeType field.
func (u *User) GetEmployeeType() *EmployeeType {
	if u != nil {
		return u.EmployeeType
	}
	return nil
}

// GetEntityType returns the EntityType field.
func (u *User) GetEntityType() *EntityType {
	if u != nil {
		return u.EntityType
	}
	return nil
}

// GetFirstname returns the Firstname field if it's non-nil, zero value otherwise.
func (u *User) GetFirstname() string {
	if u != nil && u.Firstname != nil {
		return *u.Firstname
	}
	return ""
}

// GetIncomeRange returns the IncomeRange field if it's non-nil, zero value otherwise.
func (u *User) GetIncomeRange() string {
	if u != nil && u.IncomeRange != nil {
		return *u.IncomeRange
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (u *User) GetInformationStatus() string {
	if u != nil && u.InformationStatus != nil {
		return *u.InformationStatus
	}
	return ""
}

// GetInvolvedSanctions returns the InvolvedSanctions field if it's non-nil, zero value otherwise.
func (u *User) GetInvolvedSanctions() bool {
	if u != nil && u.InvolvedSanctions != nil {
		return u.InvolvedSanctions.Bool()
	}
	return false
}

// GetIsFreezed returns the IsFreezed field if it's non-nil, zero value otherwise.
func (u *User) GetIsFreezed() bool {
	if u != nil && u.IsFreezed != nil {
		return u.IsFreezed.Bool()
	}
	return false
}

// GetIsFrozen returns the IsFrozen field if it's non-nil, zero value otherwise.
func (u *User) GetIsFrozen() bool {
	if u != nil && u.IsFrozen != nil {
		return u.IsFrozen.Bool()
	}
	return false
}

// GetKycLevel returns the KycLevel field if it's non-nil, zero value otherwise.
func (u *User) GetKycLevel() KYCLevel {
	if u != nil && u.KycLevel != nil {
		return *u.KycLevel
	}
	return KYCLevelNone
}

// GetKycReview returns the KycReview field if it's non-nil, zero value otherwise.
func (u *User) GetKycReview() KYCReview {
	if u != nil && u.KycReview != nil {
		return *u.KycReview
	}
	return KYCReviewNone
}

// GetKycReviewComment returns the KycReviewComment field if it's non-nil, zero value otherwise.
func (u *User) GetKycReviewComment() string {
	if u != nil && u.KycReviewComment != nil {
		return *u.KycReviewComment
	}
	return ""
}

// GetLanguage returns the Language field if it's non-nil, zero value otherwise.
func (u *User) GetLanguage() string {
	if u != nil && u.Language != nil {
		return *u.Language
	}
	return ""
}

// GetLastname returns the Lastname field if it's non-nil, zero value otherwise.
func (u *User) GetLastname() string {
	if u != nil && u.Lastname != nil {
		return *u.Lastname
	}
	return ""
}

// GetLegalAnnualTurnOver returns the LegalAnnualTurnOver field if it's non-nil, zero value otherwise.
func (u *User) GetLegalAnnualTurnOver() string {
	if u != nil && u.LegalAnnualTurnOver != nil {
		return *u.LegalAnnualTurnOver
	}
	return ""
}

// GetLegalForm returns the LegalForm field if it's non-nil, zero value otherwise.
func (u *User) GetLegalForm() string {
	if u != nil && u.LegalForm != nil {
		return *u.LegalForm
	}
	return ""
}

// GetLegalName returns the LegalName field if it's non-nil, zero value otherwise.
func (u *User) GetLegalName() string {
	if u != nil && u.LegalName != nil {
		return *u.LegalName
	}
	return ""
}

// GetLegalNameEmbossed returns the LegalNameEmbossed field if it's non-nil, zero value otherwise.
func (u *User) GetLegalNameEmbossed() string {
	if u != nil && u.LegalNameEmbossed != nil {
		return *u.LegalNameEmbossed
	}
	return ""
}

// GetLegalNetIncomeRange returns the LegalNetIncomeRange field if it's non-nil, zero value otherwise.
func (u *User) GetLegalNetIncomeRange() string {
	if u != nil && u.LegalNetIncomeRange != nil {
		return *u.LegalNetIncomeRange
	}
	return ""
}

// GetLegalNumberOfEmployeeRange returns the LegalNumberOfEmployeeRange field if it's non-nil, zero value otherwise.
func (u *User) GetLegalNumberOfEmployeeRange() string {
	if u != nil && u.LegalNumberOfEmployeeRange != nil {
		return *u.LegalNumberOfEmployeeRange
	}
	return ""
}

// GetLegalRegistrationDate returns the LegalRegistrationDate field if it's non-nil, zero value otherwise.
func (u *User) GetLegalRegistrationDate() time.Time {
	if u != nil && u.LegalRegistrationDate != nil {
		return u.LegalRegistrationDate.Time
	}
	return time.Time{}
}

// GetLegalRegistrationNumber returns the LegalRegistrationNumber field if it's non-nil, zero value otherwise.
func (u *User) GetLegalRegistrationNumber() string {
	if u != nil && u.LegalRegistrationNumber != nil {
		return *u.LegalRegistrationNumber
	}
	return ""
}

// GetLegalSector returns the LegalSector field if it's non-nil, zero value otherwise.
func (u *User) GetLegalSector() string {
	if u != nil && u.LegalSector != nil {
		return *u.LegalSector
	}
	return ""
}

// GetLegalShareCapital returns the LegalShareCapital field if it's non-nil, zero value otherwise.
func (u *User) GetLegalShareCapital() int64 {
	if u != nil && u.LegalShareCapital != nil {
		return u.LegalShareCapital.Int64()
	}
	return 0
}

// GetLegalTVANumber returns the LegalTVANumber field if it's non-nil, zero value otherwise.
func (u *User) GetLegalTVANumber() string {
	if u != nil && u.LegalTVANumber != nil {
		return *u.LegalTVANumber
	}
	return ""
}

// GetMiddleNames returns the MiddleNames field if it's non-nil, zero value otherwise.
func (u *User) GetMiddleNames() string {
	if u != nil && u.MiddleNames != nil {
		return *u.MiddleNames
	}
	return ""
}

// GetMobile returns the Mobile field if it's non-nil, zero value otherwise.
func (u *User) GetMobile() string {
	if u != nil && u.Mobile != nil {
		return *u.Mobile
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (u *User) GetModifiedDate() time.Time {
	if u != nil && u.ModifiedDate != nil {
		return u.ModifiedDate.Time
	}
	return time.Time{}
}

// GetNationality returns the Nationality field if it's non-nil, zero value otherwise.
func (u *User) GetNationality() string {
	if u != nil && u.Nationality != nil {
		return *u.Nationality
	}
	return ""
}

// GetNationalityOther returns the NationalityOther field if it's non-nil, zero value otherwise.
func (u *User) GetNationalityOther() string {
	if u != nil && u.NationalityOther != nil {
		return *u.NationalityOther
	}
	return ""
}

// GetOccupation returns the Occupation field if it's non-nil, zero value otherwise.
func (u *User) GetOccupation() string {
	if u != nil && u.Occupation != nil {
		return *u.Occupation
	}
	return ""
}

// GetOptInMailing returns the OptInMailing field if it's non-nil, zero value otherwise.
func (u *User) GetOptInMailing() bool {
	if u != nil && u.OptInMailing != nil {
		return u.OptInMailing.Bool()
	}
	return false
}

// GetParentType returns the ParentType field.
func (u *User) GetParentType() *ParentType {
	if u != nil {
		return u.ParentType
	}
	return nil
}

// GetParentUserID returns the ParentUserID field if it's non-nil, zero value otherwise.
func (u *User) GetParentUserID() string {
	if u != nil && u.ParentUserID != nil {
		return u.ParentUserID.String()
	}
	return ""
}

// GetPayinCount returns the PayinCount field if it's non-nil, zero value otherwise.
func (u *User) GetPayinCount() int64 {
	if u != nil && u.PayinCount != nil {
		return u.PayinCount.Int64()
	}
	return 0
}

// GetPersonalAssets returns the PersonalAssets field if it's non-nil, zero value otherwise.
func (u *User) GetPersonalAssets() string {
	if u != nil && u.PersonalAssets != nil {
		return *u.PersonalAssets
	}
	return ""
}

// GetPhone returns the Phone field if it's non-nil, zero value otherwise.
func (u *User) GetPhone() string {
	if u != nil && u.Phone != nil {
		return *u.Phone
	}
	return ""
}

// GetPlaceOfBirth returns the PlaceOfBirth field if it's non-nil, zero value otherwise.
func (u *User) GetPlaceOfBirth() string {
	if u != nil && u.PlaceOfBirth != nil {
		return *u.PlaceOfBirth
	}
	return ""
}

// GetPosition returns the Position field if it's non-nil, zero value otherwise.
func (u *User) GetPosition() string {
	if u != nil && u.Position != nil {
		return *u.Position
	}
	return ""
}

// GetPostcode returns the Postcode field if it's non-nil, zero value otherwise.
func (u *User) GetPostcode() string {
	if u != nil && u.Postcode != nil {
		return *u.Postcode
	}
	return ""
}

// GetResidentCountriesSanctions returns the ResidentCountriesSanctions field if it's non-nil, zero value otherwise.
func (u *User) GetResidentCountriesSanctions() bool {
	if u != nil && u.ResidentCountriesSanctions != nil {
		return u.ResidentCountriesSanctions.Bool()
	}
	return false
}

// GetSanctionsQuestionnaireDate returns the SanctionsQuestionnaireDate field if it's non-nil, zero value otherwise.
func (u *User) GetSanctionsQuestionnaireDate() time.Time {
	if u != nil && u.SanctionsQuestionnaireDate != nil {
		return u.SanctionsQuestionnaireDate.Time
	}
	return time.Time{}
}

// GetSepaCreditorIdentifier returns the SepaCreditorIdentifier field if it's non-nil, zero value otherwise.
func (u *User) GetSepaCreditorIdentifier() string {
	if u != nil && u.SepaCreditorIdentifier != nil {
		return *u.SepaCreditorIdentifier
	}
	return ""
}

// GetSpecifiedUSPerson returns the SpecifiedUSPerson field if it's non-nil, zero value otherwise.
func (u *User) GetSpecifiedUSPerson() bool {
	if u != nil && u.SpecifiedUSPerson != nil {
		return u.SpecifiedUSPerson.Bool()
	}
	return false
}

// GetState returns the State field if it's non-nil, zero value otherwise.
func (u *User) GetState() string {
	if u != nil && u.State != nil {
		return *u.State
	}
	return ""
}

// GetTaxNumber returns the TaxNumber field if it's non-nil, zero value otherwise.
func (u *User) GetTaxNumber() string {
	if u != nil && u.TaxNumber != nil {
		return *u.TaxNumber
	}
	return ""
}

// GetTaxResidence returns the TaxResidence field if it's non-nil, zero value otherwise.
func (u *User) GetTaxResidence() string {
	if u != nil && u.TaxResidence != nil {
		return *u.TaxResidence
	}
	return ""
}

// GetTimezone returns the Timezone field if it's non-nil, zero value otherwise.
func (u *User) GetTimezone() string {
	if u != nil && u.Timezone != nil {
		return *u.Timezone
	}
	return ""
}

// GetTitle returns the Title field if it's non-nil, zero value otherwise.
func (u *User) GetTitle() string {
	if u != nil && u.Title != nil {
		return *u.Title
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (u *User) GetTotalRows() int64 {
	if u != nil && u.TotalRows != nil {
		return u.TotalRows.Int64()
	}
	return 0
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (u *User) GetUserID() string {
	if u != nil && u.UserID != nil {
		return u.UserID.String()
	}
	return ""
}

// GetUserStatus returns the UserStatus field if it's non-nil, zero value otherwise.
func (u *User) GetUserStatus() string {
	if u != nil && u.UserStatus != nil {
		return *u.UserStatus
	}
	return ""
}

// GetUserTag returns the UserTag field if it's non-nil, zero value otherwise.
func (u *User) GetUserTag() string {
	if u != nil && u.UserTag != nil {
		return *u.UserTag
	}
	return ""
}

// GetUserTypeID returns the UserTypeID field.
func (u *User) GetUserTypeID() *UserType {
	if u != nil {
		return u.UserTypeID
	}
	return nil
}

// GetWalletCount returns the WalletCount field if it's non-nil, zero value otherwise.
func (u *User) GetWalletCount() int64 {
	if u != nil && u.WalletCount != nil {
		return u.WalletCount.Int64()
	}
	return 0
}

// GetUsers returns the Users field.
func (u *UserEvent) GetUsers() []*User {
	if u != nil {
		return u.Users
	}
	return nil
}

// GetUsers returns the Users field.
func (u *UserResponse) GetUsers() []*User {
	if u != nil {
		return u.Users
	}
	return nil
}

// GetAuthorizedBalance returns the AuthorizedBalance field if it's non-nil, zero value otherwise.
func (w *Wallet) GetAuthorizedBalance() float64 {
	if w != nil && w.AuthorizedBalance != nil {
		return w.AuthorizedBalance.Float64()
	}
	return 0.0
}

// GetBIC returns the BIC field if it's non-nil, zero value otherwise.
func (w *Wallet) GetBIC() string {
	if w != nil && w.BIC != nil {
		return *w.BIC
	}
	return ""
}

// GetCodeStatus returns the CodeStatus field if it's non-nil, zero value otherwise.
func (w *Wallet) GetCodeStatus() string {
	if w != nil && w.CodeStatus != nil {
		return w.CodeStatus.String()
	}
	return ""
}

// GetContractSigned returns the ContractSigned field if it's non-nil, zero value otherwise.
func (w *Wallet) GetContractSigned() bool {
	if w != nil && w.ContractSigned != nil {
		return w.ContractSigned.Bool()
	}
	return false
}

// GetCreatedDate returns the CreatedDate field if it's non-nil, zero value otherwise.
func (w *Wallet) GetCreatedDate() time.Time {
	if w != nil && w.CreatedDate != nil {
		return w.CreatedDate.Time
	}
	return time.Time{}
}

// GetCurrency returns the Currency field if it's non-nil, zero value otherwise.
func (w *Wallet) GetCurrency() Currency {
	if w != nil && w.Currency != nil {
		return *w.Currency
	}
	return Currency("")
}

// GetEventAlias returns the EventAlias field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventAlias() string {
	if w != nil && w.EventAlias != nil {
		return *w.EventAlias
	}
	return ""
}

// GetEventDate returns the EventDate field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventDate() time.Time {
	if w != nil && w.EventDate != nil {
		return w.EventDate.Time
	}
	return time.Time{}
}

// GetEventMessage returns the EventMessage field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventMessage() string {
	if w != nil && w.EventMessage != nil {
		return *w.EventMessage
	}
	return ""
}

// GetEventName returns the EventName field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventName() string {
	if w != nil && w.EventName != nil {
		return *w.EventName
	}
	return ""
}

// GetEventPayinEndDate returns the EventPayinEndDate field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventPayinEndDate() time.Time {
	if w != nil && w.EventPayinEndDate != nil {
		return w.EventPayinEndDate.Time
	}
	return time.Time{}
}

// GetEventPayinStartDate returns the EventPayinStartDate field if it's non-nil, zero value otherwise.
func (w *Wallet) GetEventPayinStartDate() time.Time {
	if w != nil && w.EventPayinStartDate != nil {
		return w.EventPayinStartDate.Time
	}
	return time.Time{}
}

// GetIBAN returns the IBAN field if it's non-nil, zero value otherwise.
func (w *Wallet) GetIBAN() string {
	if w != nil && w.IBAN != nil {
		return *w.IBAN
	}
	return ""
}

// GetInformationStatus returns the InformationStatus field if it's non-nil, zero value otherwise.
func (w *Wallet) GetInformationStatus() string {
	if w != nil && w.InformationStatus != nil {
		return *w.InformationStatus
	}
	return ""
}

// GetJointUserID returns the JointUserID field if it's non-nil, zero value otherwise.
func (w *Wallet) GetJointUserID() string {
	if w != nil && w.JointUserID != nil {
		return w.JointUserID.String()
	}
	return ""
}

// GetModifiedDate returns the ModifiedDate field if it's non-nil, zero value otherwise.
func (w *Wallet) GetModifiedDate() time.Time {
	if w != nil && w.ModifiedDate != nil {
		return w.ModifiedDate.Time
	}
	return time.Time{}
}

// GetPayinCount returns the PayinCount field if it's non-nil, zero value otherwise.
func (w *Wallet) GetPayinCount() int64 {
	if w != nil && w.PayinCount != nil {
		return w.PayinCount.Int64()
	}
	return 0
}

// GetPayoutCount returns the PayoutCount field if it's non-nil, zero value otherwise.
func (w *Wallet) GetPayoutCount() int64 {
	if w != nil && w.PayoutCount != nil {
		return w.PayoutCount.Int64()
	}
	return 0
}

// GetSolde returns the Solde field if it's non-nil, zero value otherwise.
func (w *Wallet) GetSolde() float64 {
	if w != nil && w.Solde != nil {
		return w.Solde.Float64()
	}
	return 0.0
}

// GetTariffID returns the TariffID field if it's non-nil, zero value otherwise.
func (w *Wallet) GetTariffID() string {
	if w != nil && w.TariffID != nil {
		return w.TariffID.String()
	}
	return ""
}

// GetTotalRows returns the TotalRows field if it's non-nil, zero value otherwise.
func (w *Wallet) GetTotalRows() int64 {
	if w != nil && w.TotalRows != nil {
		return w.TotalRows.Int64()
	}
	return 0
}

// GetTransferCount returns the TransferCount field if it's non-nil, zero value otherwise.
func (w *Wallet) GetTransferCount() int64 {
	if w != nil && w.TransferCount != nil {
		return w.TransferCount.Int64()
	}
	return 0
}

// GetURLImage returns the URLImage field if it's non-nil, zero value otherwise.
func (w *Wallet) GetURLImage() string {
	if w != nil && w.URLImage != nil {
		return *w.URLImage
	}
	return ""
}

// GetUserFirstname returns the UserFirstname field if it's non-nil, zero value otherwise.
func (w *Wallet) GetUserFirstname() string {
	if w != nil && w.UserFirstname != nil {
		return *w.UserFirstname
	}
	return ""
}

// GetUserID returns the UserID field if it's non-nil, zero value otherwise.
func (w *Wallet) GetUserID() string {
	if w != nil && w.UserID != nil {
		return w.UserID.String()
	}
	return ""
}

// GetUserLastname returns the UserLastname field if it's non-nil, zero value otherwise.
func (w *Wallet) GetUserLastname() string {
	if w != nil && w.UserLastname != nil {
		return *w.UserLastname
	}
	return ""
}

// GetWalletID returns the WalletID field if it's non-nil, zero value otherwise.
func (w *Wallet) GetWalletID() string {
	if w != nil && w.WalletID != nil {
		return w.WalletID.String()
	}
	return ""
}

// GetWalletStatus returns the WalletStatus field if it's non-nil, zero value otherwise.
func (w *Wallet) GetWalletStatus() string {
	if w != nil && w.WalletStatus != nil {
		return *w.WalletStatus
	}
	return ""
}

// GetWalletTag returns the WalletTag field if it's non-nil, zero value otherwise.
func (w *Wallet) GetWalletTag() string {
	if w != nil && w.WalletTag != nil {
		return *w.WalletTag
	}
	return ""
}

// GetWalletTypeID returns the WalletTypeID field.
func (w *Wallet) GetWalletTypeID() *WalletType {
	if w != nil {
		return w.WalletTypeID
	}
	return nil
}

// GetWallets returns the Wallets field.
func (w *WalletEvent) GetWallets() []*Wallet {
	if w != nil {
		return w.Wallets
	}
	return nil
}

// GetWallets returns the Wallets field.
func (w *WalletResponse) GetWallets() []*Wallet {
	if w != nil {
		return w.Wallets
	}
	return nil
}
